/*
 * MIT License
 *
 * Copyright (c) 2022-present Overrun Organization
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 */

// This file is auto-generated. DO NOT EDIT!
package overrungl.opengl.ext.ext;

import overrungl.*;
import overrun.marshal.*;
import java.lang.foreign.*;

/**
 * {@code GL_EXT_direct_state_access}
 */
public interface GLEXTDirectStateAccess {
    int GL_PROGRAM_MATRIX_EXT = 0x8E2D;
    int GL_TRANSPOSE_PROGRAM_MATRIX_EXT = 0x8E2E;
    int GL_PROGRAM_MATRIX_STACK_DEPTH_EXT = 0x8E2F;

    void glMatrixLoadfEXT(int mode, @NativeType("const GLfloat *") MemorySegment m);
    void glMatrixLoaddEXT(int mode, @NativeType("const GLdouble *") MemorySegment m);
    void glMatrixMultfEXT(int mode, @NativeType("const GLfloat *") MemorySegment m);
    void glMatrixMultdEXT(int mode, @NativeType("const GLdouble *") MemorySegment m);
    void glMatrixLoadIdentityEXT(int mode);
    void glMatrixRotatefEXT(int mode, float angle, float x, float y, float z);
    void glMatrixRotatedEXT(int mode, double angle, double x, double y, double z);
    void glMatrixScalefEXT(int mode, float x, float y, float z);
    void glMatrixScaledEXT(int mode, double x, double y, double z);
    void glMatrixTranslatefEXT(int mode, float x, float y, float z);
    void glMatrixTranslatedEXT(int mode, double x, double y, double z);
    void glMatrixFrustumEXT(int mode, double left, double right, double bottom, double top, double zNear, double zFar);
    void glMatrixOrthoEXT(int mode, double left, double right, double bottom, double top, double zNear, double zFar);
    void glMatrixPopEXT(int mode);
    void glMatrixPushEXT(int mode);
    void glClientAttribDefaultEXT(int mask);
    void glPushClientAttribDefaultEXT(int mask);
    void glTextureParameterfEXT(int texture, int target, int pname, float param);
    void glTextureParameterfvEXT(int texture, int target, int pname, @NativeType("const GLfloat *") MemorySegment params);
    void glTextureParameteriEXT(int texture, int target, int pname, int param);
    void glTextureParameterivEXT(int texture, int target, int pname, @NativeType("const GLint *") MemorySegment params);
    void glTextureImage1DEXT(int texture, int target, int level, int internalformat, int width, int border, int format, int type, @NativeType("const void *") MemorySegment pixels);
    void glTextureImage2DEXT(int texture, int target, int level, int internalformat, int width, int height, int border, int format, int type, @NativeType("const void *") MemorySegment pixels);
    void glTextureSubImage1DEXT(int texture, int target, int level, int xoffset, int width, int format, int type, @NativeType("const void *") MemorySegment pixels);
    void glTextureSubImage2DEXT(int texture, int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, @NativeType("const void *") MemorySegment pixels);
    void glCopyTextureImage1DEXT(int texture, int target, int level, int internalformat, int x, int y, int width, int border);
    void glCopyTextureImage2DEXT(int texture, int target, int level, int internalformat, int x, int y, int width, int height, int border);
    void glCopyTextureSubImage1DEXT(int texture, int target, int level, int xoffset, int x, int y, int width);
    void glCopyTextureSubImage2DEXT(int texture, int target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
    void glGetTextureImageEXT(int texture, int target, int level, int format, int type, @NativeType("void *") MemorySegment pixels);
    void glGetTextureParameterfvEXT(int texture, int target, int pname, @NativeType("GLfloat *") MemorySegment params);
    void glGetTextureParameterivEXT(int texture, int target, int pname, @NativeType("GLint *") MemorySegment params);
    void glGetTextureLevelParameterfvEXT(int texture, int target, int level, int pname, @NativeType("GLfloat *") MemorySegment params);
    void glGetTextureLevelParameterivEXT(int texture, int target, int level, int pname, @NativeType("GLint *") MemorySegment params);
    void glTextureImage3DEXT(int texture, int target, int level, int internalformat, int width, int height, int depth, int border, int format, int type, @NativeType("const void *") MemorySegment pixels);
    void glTextureSubImage3DEXT(int texture, int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, @NativeType("const void *") MemorySegment pixels);
    void glCopyTextureSubImage3DEXT(int texture, int target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
    void glBindMultiTextureEXT(int texunit, int target, int texture);
    void glMultiTexCoordPointerEXT(int texunit, int size, int type, int stride, @NativeType("const void *") MemorySegment pointer);
    void glMultiTexEnvfEXT(int texunit, int target, int pname, float param);
    void glMultiTexEnvfvEXT(int texunit, int target, int pname, @NativeType("const GLfloat *") MemorySegment params);
    void glMultiTexEnviEXT(int texunit, int target, int pname, int param);
    void glMultiTexEnvivEXT(int texunit, int target, int pname, @NativeType("const GLint *") MemorySegment params);
    void glMultiTexGendEXT(int texunit, int coord, int pname, double param);
    void glMultiTexGendvEXT(int texunit, int coord, int pname, @NativeType("const GLdouble *") MemorySegment params);
    void glMultiTexGenfEXT(int texunit, int coord, int pname, float param);
    void glMultiTexGenfvEXT(int texunit, int coord, int pname, @NativeType("const GLfloat *") MemorySegment params);
    void glMultiTexGeniEXT(int texunit, int coord, int pname, int param);
    void glMultiTexGenivEXT(int texunit, int coord, int pname, @NativeType("const GLint *") MemorySegment params);
    void glGetMultiTexEnvfvEXT(int texunit, int target, int pname, @NativeType("GLfloat *") MemorySegment params);
    void glGetMultiTexEnvivEXT(int texunit, int target, int pname, @NativeType("GLint *") MemorySegment params);
    void glGetMultiTexGendvEXT(int texunit, int coord, int pname, @NativeType("GLdouble *") MemorySegment params);
    void glGetMultiTexGenfvEXT(int texunit, int coord, int pname, @NativeType("GLfloat *") MemorySegment params);
    void glGetMultiTexGenivEXT(int texunit, int coord, int pname, @NativeType("GLint *") MemorySegment params);
    void glMultiTexParameteriEXT(int texunit, int target, int pname, int param);
    void glMultiTexParameterivEXT(int texunit, int target, int pname, @NativeType("const GLint *") MemorySegment params);
    void glMultiTexParameterfEXT(int texunit, int target, int pname, float param);
    void glMultiTexParameterfvEXT(int texunit, int target, int pname, @NativeType("const GLfloat *") MemorySegment params);
    void glMultiTexImage1DEXT(int texunit, int target, int level, int internalformat, int width, int border, int format, int type, @NativeType("const void *") MemorySegment pixels);
    void glMultiTexImage2DEXT(int texunit, int target, int level, int internalformat, int width, int height, int border, int format, int type, @NativeType("const void *") MemorySegment pixels);
    void glMultiTexSubImage1DEXT(int texunit, int target, int level, int xoffset, int width, int format, int type, @NativeType("const void *") MemorySegment pixels);
    void glMultiTexSubImage2DEXT(int texunit, int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, @NativeType("const void *") MemorySegment pixels);
    void glCopyMultiTexImage1DEXT(int texunit, int target, int level, int internalformat, int x, int y, int width, int border);
    void glCopyMultiTexImage2DEXT(int texunit, int target, int level, int internalformat, int x, int y, int width, int height, int border);
    void glCopyMultiTexSubImage1DEXT(int texunit, int target, int level, int xoffset, int x, int y, int width);
    void glCopyMultiTexSubImage2DEXT(int texunit, int target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
    void glGetMultiTexImageEXT(int texunit, int target, int level, int format, int type, @NativeType("void *") MemorySegment pixels);
    void glGetMultiTexParameterfvEXT(int texunit, int target, int pname, @NativeType("GLfloat *") MemorySegment params);
    void glGetMultiTexParameterivEXT(int texunit, int target, int pname, @NativeType("GLint *") MemorySegment params);
    void glGetMultiTexLevelParameterfvEXT(int texunit, int target, int level, int pname, @NativeType("GLfloat *") MemorySegment params);
    void glGetMultiTexLevelParameterivEXT(int texunit, int target, int level, int pname, @NativeType("GLint *") MemorySegment params);
    void glMultiTexImage3DEXT(int texunit, int target, int level, int internalformat, int width, int height, int depth, int border, int format, int type, @NativeType("const void *") MemorySegment pixels);
    void glMultiTexSubImage3DEXT(int texunit, int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, @NativeType("const void *") MemorySegment pixels);
    void glCopyMultiTexSubImage3DEXT(int texunit, int target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
    void glEnableClientStateIndexedEXT(int array, int index);
    void glDisableClientStateIndexedEXT(int array, int index);
    void glGetFloatIndexedvEXT(int target, int index, @NativeType("GLfloat *") MemorySegment data);
    void glGetDoubleIndexedvEXT(int target, int index, @NativeType("GLdouble *") MemorySegment data);
    void glGetPointerIndexedvEXT(int target, int index, @NativeType("void **") MemorySegment data);
    void glEnableIndexedEXT(int target, int index);
    void glDisableIndexedEXT(int target, int index);
    boolean glIsEnabledIndexedEXT(int target, int index);
    void glGetIntegerIndexedvEXT(int target, int index, @NativeType("GLint *") MemorySegment data);
    void glGetBooleanIndexedvEXT(int target, int index, @NativeType("GLboolean *") MemorySegment data);
    void glCompressedTextureImage3DEXT(int texture, int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, @NativeType("const void *") MemorySegment bits);
    void glCompressedTextureImage2DEXT(int texture, int target, int level, int internalformat, int width, int height, int border, int imageSize, @NativeType("const void *") MemorySegment bits);
    void glCompressedTextureImage1DEXT(int texture, int target, int level, int internalformat, int width, int border, int imageSize, @NativeType("const void *") MemorySegment bits);
    void glCompressedTextureSubImage3DEXT(int texture, int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, @NativeType("const void *") MemorySegment bits);
    void glCompressedTextureSubImage2DEXT(int texture, int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, @NativeType("const void *") MemorySegment bits);
    void glCompressedTextureSubImage1DEXT(int texture, int target, int level, int xoffset, int width, int format, int imageSize, @NativeType("const void *") MemorySegment bits);
    void glGetCompressedTextureImageEXT(int texture, int target, int lod, @NativeType("void *") MemorySegment img);
    void glCompressedMultiTexImage3DEXT(int texunit, int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, @NativeType("const void *") MemorySegment bits);
    void glCompressedMultiTexImage2DEXT(int texunit, int target, int level, int internalformat, int width, int height, int border, int imageSize, @NativeType("const void *") MemorySegment bits);
    void glCompressedMultiTexImage1DEXT(int texunit, int target, int level, int internalformat, int width, int border, int imageSize, @NativeType("const void *") MemorySegment bits);
    void glCompressedMultiTexSubImage3DEXT(int texunit, int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, @NativeType("const void *") MemorySegment bits);
    void glCompressedMultiTexSubImage2DEXT(int texunit, int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, @NativeType("const void *") MemorySegment bits);
    void glCompressedMultiTexSubImage1DEXT(int texunit, int target, int level, int xoffset, int width, int format, int imageSize, @NativeType("const void *") MemorySegment bits);
    void glGetCompressedMultiTexImageEXT(int texunit, int target, int lod, @NativeType("void *") MemorySegment img);
    void glMatrixLoadTransposefEXT(int mode, @NativeType("const GLfloat *") MemorySegment m);
    void glMatrixLoadTransposedEXT(int mode, @NativeType("const GLdouble *") MemorySegment m);
    void glMatrixMultTransposefEXT(int mode, @NativeType("const GLfloat *") MemorySegment m);
    void glMatrixMultTransposedEXT(int mode, @NativeType("const GLdouble *") MemorySegment m);
    void glNamedBufferDataEXT(int buffer, long size, @NativeType("const void *") MemorySegment data, int usage);
    void glNamedBufferSubDataEXT(int buffer, long offset, long size, @NativeType("const void *") MemorySegment data);
    @NativeType("void *") MemorySegment glMapNamedBufferEXT(int buffer, int access);
    boolean glUnmapNamedBufferEXT(int buffer);
    void glGetNamedBufferParameterivEXT(int buffer, int pname, @NativeType("GLint *") MemorySegment params);
    void glGetNamedBufferPointervEXT(int buffer, int pname, @NativeType("void **") MemorySegment params);
    void glGetNamedBufferSubDataEXT(int buffer, long offset, long size, @NativeType("void *") MemorySegment data);
    void glProgramUniform1fEXT(int program, int location, float v0);
    void glProgramUniform2fEXT(int program, int location, float v0, float v1);
    void glProgramUniform3fEXT(int program, int location, float v0, float v1, float v2);
    void glProgramUniform4fEXT(int program, int location, float v0, float v1, float v2, float v3);
    void glProgramUniform1iEXT(int program, int location, int v0);
    void glProgramUniform2iEXT(int program, int location, int v0, int v1);
    void glProgramUniform3iEXT(int program, int location, int v0, int v1, int v2);
    void glProgramUniform4iEXT(int program, int location, int v0, int v1, int v2, int v3);
    void glProgramUniform1fvEXT(int program, int location, int count, @NativeType("const GLfloat *") MemorySegment value);
    void glProgramUniform2fvEXT(int program, int location, int count, @NativeType("const GLfloat *") MemorySegment value);
    void glProgramUniform3fvEXT(int program, int location, int count, @NativeType("const GLfloat *") MemorySegment value);
    void glProgramUniform4fvEXT(int program, int location, int count, @NativeType("const GLfloat *") MemorySegment value);
    void glProgramUniform1ivEXT(int program, int location, int count, @NativeType("const GLint *") MemorySegment value);
    void glProgramUniform2ivEXT(int program, int location, int count, @NativeType("const GLint *") MemorySegment value);
    void glProgramUniform3ivEXT(int program, int location, int count, @NativeType("const GLint *") MemorySegment value);
    void glProgramUniform4ivEXT(int program, int location, int count, @NativeType("const GLint *") MemorySegment value);
    void glProgramUniformMatrix2fvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLfloat *") MemorySegment value);
    void glProgramUniformMatrix3fvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLfloat *") MemorySegment value);
    void glProgramUniformMatrix4fvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLfloat *") MemorySegment value);
    void glProgramUniformMatrix2x3fvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLfloat *") MemorySegment value);
    void glProgramUniformMatrix3x2fvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLfloat *") MemorySegment value);
    void glProgramUniformMatrix2x4fvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLfloat *") MemorySegment value);
    void glProgramUniformMatrix4x2fvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLfloat *") MemorySegment value);
    void glProgramUniformMatrix3x4fvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLfloat *") MemorySegment value);
    void glProgramUniformMatrix4x3fvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLfloat *") MemorySegment value);
    void glTextureBufferEXT(int texture, int target, int internalformat, int buffer);
    void glMultiTexBufferEXT(int texunit, int target, int internalformat, int buffer);
    void glTextureParameterIivEXT(int texture, int target, int pname, @NativeType("const GLint *") MemorySegment params);
    void glTextureParameterIuivEXT(int texture, int target, int pname, @NativeType("const GLuint *") MemorySegment params);
    void glGetTextureParameterIivEXT(int texture, int target, int pname, @NativeType("GLint *") MemorySegment params);
    void glGetTextureParameterIuivEXT(int texture, int target, int pname, @NativeType("GLuint *") MemorySegment params);
    void glMultiTexParameterIivEXT(int texunit, int target, int pname, @NativeType("const GLint *") MemorySegment params);
    void glMultiTexParameterIuivEXT(int texunit, int target, int pname, @NativeType("const GLuint *") MemorySegment params);
    void glGetMultiTexParameterIivEXT(int texunit, int target, int pname, @NativeType("GLint *") MemorySegment params);
    void glGetMultiTexParameterIuivEXT(int texunit, int target, int pname, @NativeType("GLuint *") MemorySegment params);
    void glProgramUniform1uiEXT(int program, int location, int v0);
    void glProgramUniform2uiEXT(int program, int location, int v0, int v1);
    void glProgramUniform3uiEXT(int program, int location, int v0, int v1, int v2);
    void glProgramUniform4uiEXT(int program, int location, int v0, int v1, int v2, int v3);
    void glProgramUniform1uivEXT(int program, int location, int count, @NativeType("const GLuint *") MemorySegment value);
    void glProgramUniform2uivEXT(int program, int location, int count, @NativeType("const GLuint *") MemorySegment value);
    void glProgramUniform3uivEXT(int program, int location, int count, @NativeType("const GLuint *") MemorySegment value);
    void glProgramUniform4uivEXT(int program, int location, int count, @NativeType("const GLuint *") MemorySegment value);
    void glNamedProgramLocalParameters4fvEXT(int program, int target, int index, int count, @NativeType("const GLfloat *") MemorySegment params);
    void glNamedProgramLocalParameterI4iEXT(int program, int target, int index, int x, int y, int z, int w);
    void glNamedProgramLocalParameterI4ivEXT(int program, int target, int index, @NativeType("const GLint *") MemorySegment params);
    void glNamedProgramLocalParametersI4ivEXT(int program, int target, int index, int count, @NativeType("const GLint *") MemorySegment params);
    void glNamedProgramLocalParameterI4uiEXT(int program, int target, int index, int x, int y, int z, int w);
    void glNamedProgramLocalParameterI4uivEXT(int program, int target, int index, @NativeType("const GLuint *") MemorySegment params);
    void glNamedProgramLocalParametersI4uivEXT(int program, int target, int index, int count, @NativeType("const GLuint *") MemorySegment params);
    void glGetNamedProgramLocalParameterIivEXT(int program, int target, int index, @NativeType("GLint *") MemorySegment params);
    void glGetNamedProgramLocalParameterIuivEXT(int program, int target, int index, @NativeType("GLuint *") MemorySegment params);
    void glEnableClientStateiEXT(int array, int index);
    void glDisableClientStateiEXT(int array, int index);
    void glGetFloati_vEXT(int pname, int index, @NativeType("GLfloat *") MemorySegment params);
    void glGetDoublei_vEXT(int pname, int index, @NativeType("GLdouble *") MemorySegment params);
    void glGetPointeri_vEXT(int pname, int index, @NativeType("void **") MemorySegment params);
    void glNamedProgramStringEXT(int program, int target, int format, int len, @NativeType("const void *") MemorySegment string);
    void glNamedProgramLocalParameter4dEXT(int program, int target, int index, double x, double y, double z, double w);
    void glNamedProgramLocalParameter4dvEXT(int program, int target, int index, @NativeType("const GLdouble *") MemorySegment params);
    void glNamedProgramLocalParameter4fEXT(int program, int target, int index, float x, float y, float z, float w);
    void glNamedProgramLocalParameter4fvEXT(int program, int target, int index, @NativeType("const GLfloat *") MemorySegment params);
    void glGetNamedProgramLocalParameterdvEXT(int program, int target, int index, @NativeType("GLdouble *") MemorySegment params);
    void glGetNamedProgramLocalParameterfvEXT(int program, int target, int index, @NativeType("GLfloat *") MemorySegment params);
    void glGetNamedProgramivEXT(int program, int target, int pname, @NativeType("GLint *") MemorySegment params);
    void glGetNamedProgramStringEXT(int program, int target, int pname, @NativeType("void *") MemorySegment string);
    void glNamedRenderbufferStorageEXT(int renderbuffer, int internalformat, int width, int height);
    void glGetNamedRenderbufferParameterivEXT(int renderbuffer, int pname, @NativeType("GLint *") MemorySegment params);
    void glNamedRenderbufferStorageMultisampleEXT(int renderbuffer, int samples, int internalformat, int width, int height);
    void glNamedRenderbufferStorageMultisampleCoverageEXT(int renderbuffer, int coverageSamples, int colorSamples, int internalformat, int width, int height);
    int glCheckNamedFramebufferStatusEXT(int framebuffer, int target);
    void glNamedFramebufferTexture1DEXT(int framebuffer, int attachment, int textarget, int texture, int level);
    void glNamedFramebufferTexture2DEXT(int framebuffer, int attachment, int textarget, int texture, int level);
    void glNamedFramebufferTexture3DEXT(int framebuffer, int attachment, int textarget, int texture, int level, int zoffset);
    void glNamedFramebufferRenderbufferEXT(int framebuffer, int attachment, int renderbuffertarget, int renderbuffer);
    void glGetNamedFramebufferAttachmentParameterivEXT(int framebuffer, int attachment, int pname, @NativeType("GLint *") MemorySegment params);
    void glGenerateTextureMipmapEXT(int texture, int target);
    void glGenerateMultiTexMipmapEXT(int texunit, int target);
    void glFramebufferDrawBufferEXT(int framebuffer, int mode);
    void glFramebufferDrawBuffersEXT(int framebuffer, int n, @NativeType("const GLenum *") MemorySegment bufs);
    void glFramebufferReadBufferEXT(int framebuffer, int mode);
    void glGetFramebufferParameterivEXT(int framebuffer, int pname, @NativeType("GLint *") MemorySegment params);
    void glNamedCopyBufferSubDataEXT(int readBuffer, int writeBuffer, long readOffset, long writeOffset, long size);
    void glNamedFramebufferTextureEXT(int framebuffer, int attachment, int texture, int level);
    void glNamedFramebufferTextureLayerEXT(int framebuffer, int attachment, int texture, int level, int layer);
    void glNamedFramebufferTextureFaceEXT(int framebuffer, int attachment, int texture, int level, int face);
    void glTextureRenderbufferEXT(int texture, int target, int renderbuffer);
    void glMultiTexRenderbufferEXT(int texunit, int target, int renderbuffer);
    void glVertexArrayVertexOffsetEXT(int vaobj, int buffer, int size, int type, int stride, long offset);
    void glVertexArrayColorOffsetEXT(int vaobj, int buffer, int size, int type, int stride, long offset);
    void glVertexArrayEdgeFlagOffsetEXT(int vaobj, int buffer, int stride, long offset);
    void glVertexArrayIndexOffsetEXT(int vaobj, int buffer, int type, int stride, long offset);
    void glVertexArrayNormalOffsetEXT(int vaobj, int buffer, int type, int stride, long offset);
    void glVertexArrayTexCoordOffsetEXT(int vaobj, int buffer, int size, int type, int stride, long offset);
    void glVertexArrayMultiTexCoordOffsetEXT(int vaobj, int buffer, int texunit, int size, int type, int stride, long offset);
    void glVertexArrayFogCoordOffsetEXT(int vaobj, int buffer, int type, int stride, long offset);
    void glVertexArraySecondaryColorOffsetEXT(int vaobj, int buffer, int size, int type, int stride, long offset);
    void glVertexArrayVertexAttribOffsetEXT(int vaobj, int buffer, int index, int size, int type, boolean normalized, int stride, long offset);
    void glVertexArrayVertexAttribIOffsetEXT(int vaobj, int buffer, int index, int size, int type, int stride, long offset);
    void glEnableVertexArrayEXT(int vaobj, int array);
    void glDisableVertexArrayEXT(int vaobj, int array);
    void glEnableVertexArrayAttribEXT(int vaobj, int index);
    void glDisableVertexArrayAttribEXT(int vaobj, int index);
    void glGetVertexArrayIntegervEXT(int vaobj, int pname, @NativeType("GLint *") MemorySegment param);
    void glGetVertexArrayPointervEXT(int vaobj, int pname, @NativeType("void **") MemorySegment param);
    void glGetVertexArrayIntegeri_vEXT(int vaobj, int index, int pname, @NativeType("GLint *") MemorySegment param);
    void glGetVertexArrayPointeri_vEXT(int vaobj, int index, int pname, @NativeType("void **") MemorySegment param);
    void glMapNamedBufferRangeEXT(int buffer, long offset, long length, int access);
    void glFlushMappedNamedBufferRangeEXT(int buffer, long offset, long length);
    void glNamedBufferStorageEXT(int buffer, long size, @NativeType("const void *") MemorySegment data, int flags);
    void glClearNamedBufferDataEXT(int buffer, int internalformat, int format, int type, @NativeType("const void *") MemorySegment data);
    void glClearNamedBufferSubDataEXT(int buffer, int internalformat, long offset, long size, int format, int type, @NativeType("const void *") MemorySegment data);
    void glNamedFramebufferParameteriEXT(int framebuffer, int pname, int param);
    void glGetNamedFramebufferParameterivEXT(int framebuffer, int pname, @NativeType("GLint *") MemorySegment params);
    void glProgramUniform1dEXT(int program, int location, double x);
    void glProgramUniform2dEXT(int program, int location, double x, double y);
    void glProgramUniform3dEXT(int program, int location, double x, double y, double z);
    void glProgramUniform4dEXT(int program, int location, double x, double y, double z, double w);
    void glProgramUniform1dvEXT(int program, int location, int count, @NativeType("const GLdouble *") MemorySegment value);
    void glProgramUniform2dvEXT(int program, int location, int count, @NativeType("const GLdouble *") MemorySegment value);
    void glProgramUniform3dvEXT(int program, int location, int count, @NativeType("const GLdouble *") MemorySegment value);
    void glProgramUniform4dvEXT(int program, int location, int count, @NativeType("const GLdouble *") MemorySegment value);
    void glProgramUniformMatrix2dvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLdouble *") MemorySegment value);
    void glProgramUniformMatrix3dvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLdouble *") MemorySegment value);
    void glProgramUniformMatrix4dvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLdouble *") MemorySegment value);
    void glProgramUniformMatrix2x3dvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLdouble *") MemorySegment value);
    void glProgramUniformMatrix2x4dvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLdouble *") MemorySegment value);
    void glProgramUniformMatrix3x2dvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLdouble *") MemorySegment value);
    void glProgramUniformMatrix3x4dvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLdouble *") MemorySegment value);
    void glProgramUniformMatrix4x2dvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLdouble *") MemorySegment value);
    void glProgramUniformMatrix4x3dvEXT(int program, int location, int count, boolean transpose, @NativeType("const GLdouble *") MemorySegment value);
    void glTextureBufferRangeEXT(int texture, int target, int internalformat, int buffer, long offset, long size);
    void glTextureStorage1DEXT(int texture, int target, int levels, int internalformat, int width);
    void glTextureStorage2DEXT(int texture, int target, int levels, int internalformat, int width, int height);
    void glTextureStorage3DEXT(int texture, int target, int levels, int internalformat, int width, int height, int depth);
    void glTextureStorage2DMultisampleEXT(int texture, int target, int samples, int internalformat, int width, int height, boolean fixedsamplelocations);
    void glTextureStorage3DMultisampleEXT(int texture, int target, int samples, int internalformat, int width, int height, int depth, boolean fixedsamplelocations);
    void glVertexArrayBindVertexBufferEXT(int vaobj, int bindingindex, int buffer, long offset, int stride);
    void glVertexArrayVertexAttribFormatEXT(int vaobj, int attribindex, int size, int type, boolean normalized, int relativeoffset);
    void glVertexArrayVertexAttribIFormatEXT(int vaobj, int attribindex, int size, int type, int relativeoffset);
    void glVertexArrayVertexAttribLFormatEXT(int vaobj, int attribindex, int size, int type, int relativeoffset);
    void glVertexArrayVertexAttribBindingEXT(int vaobj, int attribindex, int bindingindex);
    void glVertexArrayVertexBindingDivisorEXT(int vaobj, int bindingindex, int divisor);
    void glVertexArrayVertexAttribLOffsetEXT(int vaobj, int buffer, int index, int size, int type, int stride, long offset);
    void glTexturePageCommitmentEXT(int texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, boolean commit);
    void glVertexArrayVertexAttribDivisorEXT(int vaobj, int index, int divisor);
}
