/*
 * MIT License
 *
 * Copyright (c) 2022-2025 Overrun Organization
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 */

// This file is auto-generated. DO NOT EDIT!
package overrungl.vulkan;
import java.lang.foreign.*;
public final class VKCapabilitiesDevice {
    public final MemorySegment PFN_vkGetDeviceProcAddr;
    public final MemorySegment PFN_vkDestroyDevice;
    public final MemorySegment PFN_vkGetDeviceQueue;
    public final MemorySegment PFN_vkQueueSubmit;
    public final MemorySegment PFN_vkQueueWaitIdle;
    public final MemorySegment PFN_vkDeviceWaitIdle;
    public final MemorySegment PFN_vkAllocateMemory;
    public final MemorySegment PFN_vkFreeMemory;
    public final MemorySegment PFN_vkMapMemory;
    public final MemorySegment PFN_vkUnmapMemory;
    public final MemorySegment PFN_vkFlushMappedMemoryRanges;
    public final MemorySegment PFN_vkInvalidateMappedMemoryRanges;
    public final MemorySegment PFN_vkGetDeviceMemoryCommitment;
    public final MemorySegment PFN_vkBindBufferMemory;
    public final MemorySegment PFN_vkBindImageMemory;
    public final MemorySegment PFN_vkGetBufferMemoryRequirements;
    public final MemorySegment PFN_vkGetImageMemoryRequirements;
    public final MemorySegment PFN_vkGetImageSparseMemoryRequirements;
    public final MemorySegment PFN_vkQueueBindSparse;
    public final MemorySegment PFN_vkCreateFence;
    public final MemorySegment PFN_vkDestroyFence;
    public final MemorySegment PFN_vkResetFences;
    public final MemorySegment PFN_vkGetFenceStatus;
    public final MemorySegment PFN_vkWaitForFences;
    public final MemorySegment PFN_vkCreateSemaphore;
    public final MemorySegment PFN_vkDestroySemaphore;
    public final MemorySegment PFN_vkCreateEvent;
    public final MemorySegment PFN_vkDestroyEvent;
    public final MemorySegment PFN_vkGetEventStatus;
    public final MemorySegment PFN_vkSetEvent;
    public final MemorySegment PFN_vkResetEvent;
    public final MemorySegment PFN_vkCreateQueryPool;
    public final MemorySegment PFN_vkDestroyQueryPool;
    public final MemorySegment PFN_vkGetQueryPoolResults;
    public final MemorySegment PFN_vkCreateBuffer;
    public final MemorySegment PFN_vkDestroyBuffer;
    public final MemorySegment PFN_vkCreateBufferView;
    public final MemorySegment PFN_vkDestroyBufferView;
    public final MemorySegment PFN_vkCreateImage;
    public final MemorySegment PFN_vkDestroyImage;
    public final MemorySegment PFN_vkGetImageSubresourceLayout;
    public final MemorySegment PFN_vkCreateImageView;
    public final MemorySegment PFN_vkDestroyImageView;
    public final MemorySegment PFN_vkCreateShaderModule;
    public final MemorySegment PFN_vkDestroyShaderModule;
    public final MemorySegment PFN_vkCreatePipelineCache;
    public final MemorySegment PFN_vkDestroyPipelineCache;
    public final MemorySegment PFN_vkGetPipelineCacheData;
    public final MemorySegment PFN_vkMergePipelineCaches;
    public final MemorySegment PFN_vkCreateGraphicsPipelines;
    public final MemorySegment PFN_vkCreateComputePipelines;
    public final MemorySegment PFN_vkDestroyPipeline;
    public final MemorySegment PFN_vkCreatePipelineLayout;
    public final MemorySegment PFN_vkDestroyPipelineLayout;
    public final MemorySegment PFN_vkCreateSampler;
    public final MemorySegment PFN_vkDestroySampler;
    public final MemorySegment PFN_vkCreateDescriptorSetLayout;
    public final MemorySegment PFN_vkDestroyDescriptorSetLayout;
    public final MemorySegment PFN_vkCreateDescriptorPool;
    public final MemorySegment PFN_vkDestroyDescriptorPool;
    public final MemorySegment PFN_vkResetDescriptorPool;
    public final MemorySegment PFN_vkAllocateDescriptorSets;
    public final MemorySegment PFN_vkFreeDescriptorSets;
    public final MemorySegment PFN_vkUpdateDescriptorSets;
    public final MemorySegment PFN_vkCreateFramebuffer;
    public final MemorySegment PFN_vkDestroyFramebuffer;
    public final MemorySegment PFN_vkCreateRenderPass;
    public final MemorySegment PFN_vkDestroyRenderPass;
    public final MemorySegment PFN_vkGetRenderAreaGranularity;
    public final MemorySegment PFN_vkCreateCommandPool;
    public final MemorySegment PFN_vkDestroyCommandPool;
    public final MemorySegment PFN_vkResetCommandPool;
    public final MemorySegment PFN_vkAllocateCommandBuffers;
    public final MemorySegment PFN_vkFreeCommandBuffers;
    public final MemorySegment PFN_vkBeginCommandBuffer;
    public final MemorySegment PFN_vkEndCommandBuffer;
    public final MemorySegment PFN_vkResetCommandBuffer;
    public final MemorySegment PFN_vkCmdBindPipeline;
    public final MemorySegment PFN_vkCmdSetViewport;
    public final MemorySegment PFN_vkCmdSetScissor;
    public final MemorySegment PFN_vkCmdSetLineWidth;
    public final MemorySegment PFN_vkCmdSetDepthBias;
    public final MemorySegment PFN_vkCmdSetBlendConstants;
    public final MemorySegment PFN_vkCmdSetDepthBounds;
    public final MemorySegment PFN_vkCmdSetStencilCompareMask;
    public final MemorySegment PFN_vkCmdSetStencilWriteMask;
    public final MemorySegment PFN_vkCmdSetStencilReference;
    public final MemorySegment PFN_vkCmdBindDescriptorSets;
    public final MemorySegment PFN_vkCmdBindIndexBuffer;
    public final MemorySegment PFN_vkCmdBindVertexBuffers;
    public final MemorySegment PFN_vkCmdDraw;
    public final MemorySegment PFN_vkCmdDrawIndexed;
    public final MemorySegment PFN_vkCmdDrawIndirect;
    public final MemorySegment PFN_vkCmdDrawIndexedIndirect;
    public final MemorySegment PFN_vkCmdDispatch;
    public final MemorySegment PFN_vkCmdDispatchIndirect;
    public final MemorySegment PFN_vkCmdCopyBuffer;
    public final MemorySegment PFN_vkCmdCopyImage;
    public final MemorySegment PFN_vkCmdBlitImage;
    public final MemorySegment PFN_vkCmdCopyBufferToImage;
    public final MemorySegment PFN_vkCmdCopyImageToBuffer;
    public final MemorySegment PFN_vkCmdUpdateBuffer;
    public final MemorySegment PFN_vkCmdFillBuffer;
    public final MemorySegment PFN_vkCmdClearColorImage;
    public final MemorySegment PFN_vkCmdClearDepthStencilImage;
    public final MemorySegment PFN_vkCmdClearAttachments;
    public final MemorySegment PFN_vkCmdResolveImage;
    public final MemorySegment PFN_vkCmdSetEvent;
    public final MemorySegment PFN_vkCmdResetEvent;
    public final MemorySegment PFN_vkCmdWaitEvents;
    public final MemorySegment PFN_vkCmdPipelineBarrier;
    public final MemorySegment PFN_vkCmdBeginQuery;
    public final MemorySegment PFN_vkCmdEndQuery;
    public final MemorySegment PFN_vkCmdResetQueryPool;
    public final MemorySegment PFN_vkCmdWriteTimestamp;
    public final MemorySegment PFN_vkCmdCopyQueryPoolResults;
    public final MemorySegment PFN_vkCmdPushConstants;
    public final MemorySegment PFN_vkCmdBeginRenderPass;
    public final MemorySegment PFN_vkCmdNextSubpass;
    public final MemorySegment PFN_vkCmdEndRenderPass;
    public final MemorySegment PFN_vkCmdExecuteCommands;
    public final MemorySegment PFN_vkBindBufferMemory2;
    public final MemorySegment PFN_vkBindImageMemory2;
    public final MemorySegment PFN_vkGetDeviceGroupPeerMemoryFeatures;
    public final MemorySegment PFN_vkCmdSetDeviceMask;
    public final MemorySegment PFN_vkCmdDispatchBase;
    public final MemorySegment PFN_vkGetImageMemoryRequirements2;
    public final MemorySegment PFN_vkGetBufferMemoryRequirements2;
    public final MemorySegment PFN_vkGetImageSparseMemoryRequirements2;
    public final MemorySegment PFN_vkTrimCommandPool;
    public final MemorySegment PFN_vkGetDeviceQueue2;
    public final MemorySegment PFN_vkCreateSamplerYcbcrConversion;
    public final MemorySegment PFN_vkDestroySamplerYcbcrConversion;
    public final MemorySegment PFN_vkCreateDescriptorUpdateTemplate;
    public final MemorySegment PFN_vkDestroyDescriptorUpdateTemplate;
    public final MemorySegment PFN_vkUpdateDescriptorSetWithTemplate;
    public final MemorySegment PFN_vkGetDescriptorSetLayoutSupport;
    public final MemorySegment PFN_vkCmdDrawIndirectCount;
    public final MemorySegment PFN_vkCmdDrawIndexedIndirectCount;
    public final MemorySegment PFN_vkCreateRenderPass2;
    public final MemorySegment PFN_vkCmdBeginRenderPass2;
    public final MemorySegment PFN_vkCmdNextSubpass2;
    public final MemorySegment PFN_vkCmdEndRenderPass2;
    public final MemorySegment PFN_vkResetQueryPool;
    public final MemorySegment PFN_vkGetSemaphoreCounterValue;
    public final MemorySegment PFN_vkWaitSemaphores;
    public final MemorySegment PFN_vkSignalSemaphore;
    public final MemorySegment PFN_vkGetBufferDeviceAddress;
    public final MemorySegment PFN_vkGetBufferOpaqueCaptureAddress;
    public final MemorySegment PFN_vkGetDeviceMemoryOpaqueCaptureAddress;
    public final MemorySegment PFN_vkCreatePrivateDataSlot;
    public final MemorySegment PFN_vkDestroyPrivateDataSlot;
    public final MemorySegment PFN_vkSetPrivateData;
    public final MemorySegment PFN_vkGetPrivateData;
    public final MemorySegment PFN_vkCmdSetEvent2;
    public final MemorySegment PFN_vkCmdResetEvent2;
    public final MemorySegment PFN_vkCmdWaitEvents2;
    public final MemorySegment PFN_vkCmdPipelineBarrier2;
    public final MemorySegment PFN_vkCmdWriteTimestamp2;
    public final MemorySegment PFN_vkQueueSubmit2;
    public final MemorySegment PFN_vkCmdCopyBuffer2;
    public final MemorySegment PFN_vkCmdCopyImage2;
    public final MemorySegment PFN_vkCmdCopyBufferToImage2;
    public final MemorySegment PFN_vkCmdCopyImageToBuffer2;
    public final MemorySegment PFN_vkCmdBlitImage2;
    public final MemorySegment PFN_vkCmdResolveImage2;
    public final MemorySegment PFN_vkCmdBeginRendering;
    public final MemorySegment PFN_vkCmdEndRendering;
    public final MemorySegment PFN_vkCmdSetCullMode;
    public final MemorySegment PFN_vkCmdSetFrontFace;
    public final MemorySegment PFN_vkCmdSetPrimitiveTopology;
    public final MemorySegment PFN_vkCmdSetViewportWithCount;
    public final MemorySegment PFN_vkCmdSetScissorWithCount;
    public final MemorySegment PFN_vkCmdBindVertexBuffers2;
    public final MemorySegment PFN_vkCmdSetDepthTestEnable;
    public final MemorySegment PFN_vkCmdSetDepthWriteEnable;
    public final MemorySegment PFN_vkCmdSetDepthCompareOp;
    public final MemorySegment PFN_vkCmdSetDepthBoundsTestEnable;
    public final MemorySegment PFN_vkCmdSetStencilTestEnable;
    public final MemorySegment PFN_vkCmdSetStencilOp;
    public final MemorySegment PFN_vkCmdSetRasterizerDiscardEnable;
    public final MemorySegment PFN_vkCmdSetDepthBiasEnable;
    public final MemorySegment PFN_vkCmdSetPrimitiveRestartEnable;
    public final MemorySegment PFN_vkGetDeviceBufferMemoryRequirements;
    public final MemorySegment PFN_vkGetDeviceImageMemoryRequirements;
    public final MemorySegment PFN_vkGetDeviceImageSparseMemoryRequirements;
    public final MemorySegment PFN_vkCmdSetLineStipple;
    public final MemorySegment PFN_vkMapMemory2;
    public final MemorySegment PFN_vkUnmapMemory2;
    public final MemorySegment PFN_vkCmdBindIndexBuffer2;
    public final MemorySegment PFN_vkGetRenderingAreaGranularity;
    public final MemorySegment PFN_vkGetDeviceImageSubresourceLayout;
    public final MemorySegment PFN_vkGetImageSubresourceLayout2;
    public final MemorySegment PFN_vkCmdPushDescriptorSet;
    public final MemorySegment PFN_vkCmdPushDescriptorSetWithTemplate;
    public final MemorySegment PFN_vkCmdSetRenderingAttachmentLocations;
    public final MemorySegment PFN_vkCmdSetRenderingInputAttachmentIndices;
    public final MemorySegment PFN_vkCmdBindDescriptorSets2;
    public final MemorySegment PFN_vkCmdPushConstants2;
    public final MemorySegment PFN_vkCmdPushDescriptorSet2;
    public final MemorySegment PFN_vkCmdPushDescriptorSetWithTemplate2;
    public final MemorySegment PFN_vkCopyMemoryToImage;
    public final MemorySegment PFN_vkCopyImageToMemory;
    public final MemorySegment PFN_vkCopyImageToImage;
    public final MemorySegment PFN_vkTransitionImageLayout;
    public final MemorySegment PFN_vkCreateSwapchainKHR;
    public final MemorySegment PFN_vkDestroySwapchainKHR;
    public final MemorySegment PFN_vkGetSwapchainImagesKHR;
    public final MemorySegment PFN_vkAcquireNextImageKHR;
    public final MemorySegment PFN_vkQueuePresentKHR;
    public final MemorySegment PFN_vkGetDeviceGroupPresentCapabilitiesKHR;
    public final MemorySegment PFN_vkGetDeviceGroupSurfacePresentModesKHR;
    public final MemorySegment PFN_vkAcquireNextImage2KHR;
    public final MemorySegment PFN_vkCreateSharedSwapchainsKHR;
    public final MemorySegment PFN_vkDebugMarkerSetObjectTagEXT;
    public final MemorySegment PFN_vkDebugMarkerSetObjectNameEXT;
    public final MemorySegment PFN_vkCmdDebugMarkerBeginEXT;
    public final MemorySegment PFN_vkCmdDebugMarkerEndEXT;
    public final MemorySegment PFN_vkCmdDebugMarkerInsertEXT;
    public final MemorySegment PFN_vkCreateVideoSessionKHR;
    public final MemorySegment PFN_vkDestroyVideoSessionKHR;
    public final MemorySegment PFN_vkGetVideoSessionMemoryRequirementsKHR;
    public final MemorySegment PFN_vkBindVideoSessionMemoryKHR;
    public final MemorySegment PFN_vkCreateVideoSessionParametersKHR;
    public final MemorySegment PFN_vkUpdateVideoSessionParametersKHR;
    public final MemorySegment PFN_vkDestroyVideoSessionParametersKHR;
    public final MemorySegment PFN_vkCmdBeginVideoCodingKHR;
    public final MemorySegment PFN_vkCmdEndVideoCodingKHR;
    public final MemorySegment PFN_vkCmdControlVideoCodingKHR;
    public final MemorySegment PFN_vkCmdDecodeVideoKHR;
    public final MemorySegment PFN_vkCmdBindTransformFeedbackBuffersEXT;
    public final MemorySegment PFN_vkCmdBeginTransformFeedbackEXT;
    public final MemorySegment PFN_vkCmdEndTransformFeedbackEXT;
    public final MemorySegment PFN_vkCmdBeginQueryIndexedEXT;
    public final MemorySegment PFN_vkCmdEndQueryIndexedEXT;
    public final MemorySegment PFN_vkCmdDrawIndirectByteCountEXT;
    public final MemorySegment PFN_vkCreateCuModuleNVX;
    public final MemorySegment PFN_vkCreateCuFunctionNVX;
    public final MemorySegment PFN_vkDestroyCuModuleNVX;
    public final MemorySegment PFN_vkDestroyCuFunctionNVX;
    public final MemorySegment PFN_vkCmdCuLaunchKernelNVX;
    public final MemorySegment PFN_vkGetImageViewHandleNVX;
    public final MemorySegment PFN_vkGetImageViewHandle64NVX;
    public final MemorySegment PFN_vkGetImageViewAddressNVX;
    public final MemorySegment PFN_vkCmdDrawIndirectCountAMD;
    public final MemorySegment PFN_vkCmdDrawIndexedIndirectCountAMD;
    public final MemorySegment PFN_vkGetShaderInfoAMD;
    public final MemorySegment PFN_vkCmdBeginRenderingKHR;
    public final MemorySegment PFN_vkCmdEndRenderingKHR;
    public final MemorySegment PFN_vkGetMemoryWin32HandleNV;
    public final MemorySegment PFN_vkGetDeviceGroupPeerMemoryFeaturesKHR;
    public final MemorySegment PFN_vkCmdSetDeviceMaskKHR;
    public final MemorySegment PFN_vkCmdDispatchBaseKHR;
    public final MemorySegment PFN_vkTrimCommandPoolKHR;
    public final MemorySegment PFN_vkGetMemoryWin32HandleKHR;
    public final MemorySegment PFN_vkGetMemoryWin32HandlePropertiesKHR;
    public final MemorySegment PFN_vkGetMemoryFdKHR;
    public final MemorySegment PFN_vkGetMemoryFdPropertiesKHR;
    public final MemorySegment PFN_vkImportSemaphoreWin32HandleKHR;
    public final MemorySegment PFN_vkGetSemaphoreWin32HandleKHR;
    public final MemorySegment PFN_vkImportSemaphoreFdKHR;
    public final MemorySegment PFN_vkGetSemaphoreFdKHR;
    public final MemorySegment PFN_vkCmdPushDescriptorSetKHR;
    public final MemorySegment PFN_vkCmdPushDescriptorSetWithTemplateKHR;
    public final MemorySegment PFN_vkCmdBeginConditionalRenderingEXT;
    public final MemorySegment PFN_vkCmdEndConditionalRenderingEXT;
    public final MemorySegment PFN_vkCreateDescriptorUpdateTemplateKHR;
    public final MemorySegment PFN_vkDestroyDescriptorUpdateTemplateKHR;
    public final MemorySegment PFN_vkUpdateDescriptorSetWithTemplateKHR;
    public final MemorySegment PFN_vkCmdSetViewportWScalingNV;
    public final MemorySegment PFN_vkDisplayPowerControlEXT;
    public final MemorySegment PFN_vkRegisterDeviceEventEXT;
    public final MemorySegment PFN_vkRegisterDisplayEventEXT;
    public final MemorySegment PFN_vkGetSwapchainCounterEXT;
    public final MemorySegment PFN_vkGetRefreshCycleDurationGOOGLE;
    public final MemorySegment PFN_vkGetPastPresentationTimingGOOGLE;
    public final MemorySegment PFN_vkCmdSetDiscardRectangleEXT;
    public final MemorySegment PFN_vkCmdSetDiscardRectangleEnableEXT;
    public final MemorySegment PFN_vkCmdSetDiscardRectangleModeEXT;
    public final MemorySegment PFN_vkSetHdrMetadataEXT;
    public final MemorySegment PFN_vkCreateRenderPass2KHR;
    public final MemorySegment PFN_vkCmdBeginRenderPass2KHR;
    public final MemorySegment PFN_vkCmdNextSubpass2KHR;
    public final MemorySegment PFN_vkCmdEndRenderPass2KHR;
    public final MemorySegment PFN_vkGetSwapchainStatusKHR;
    public final MemorySegment PFN_vkImportFenceWin32HandleKHR;
    public final MemorySegment PFN_vkGetFenceWin32HandleKHR;
    public final MemorySegment PFN_vkImportFenceFdKHR;
    public final MemorySegment PFN_vkGetFenceFdKHR;
    public final MemorySegment PFN_vkAcquireProfilingLockKHR;
    public final MemorySegment PFN_vkReleaseProfilingLockKHR;
    public final MemorySegment PFN_vkSetDebugUtilsObjectNameEXT;
    public final MemorySegment PFN_vkSetDebugUtilsObjectTagEXT;
    public final MemorySegment PFN_vkQueueBeginDebugUtilsLabelEXT;
    public final MemorySegment PFN_vkQueueEndDebugUtilsLabelEXT;
    public final MemorySegment PFN_vkQueueInsertDebugUtilsLabelEXT;
    public final MemorySegment PFN_vkCmdBeginDebugUtilsLabelEXT;
    public final MemorySegment PFN_vkCmdEndDebugUtilsLabelEXT;
    public final MemorySegment PFN_vkCmdInsertDebugUtilsLabelEXT;
    public final MemorySegment PFN_vkGetAndroidHardwareBufferPropertiesANDROID;
    public final MemorySegment PFN_vkGetMemoryAndroidHardwareBufferANDROID;
    public final MemorySegment PFN_vkCreateExecutionGraphPipelinesAMDX;
    public final MemorySegment PFN_vkGetExecutionGraphPipelineScratchSizeAMDX;
    public final MemorySegment PFN_vkGetExecutionGraphPipelineNodeIndexAMDX;
    public final MemorySegment PFN_vkCmdInitializeGraphScratchMemoryAMDX;
    public final MemorySegment PFN_vkCmdDispatchGraphAMDX;
    public final MemorySegment PFN_vkCmdDispatchGraphIndirectAMDX;
    public final MemorySegment PFN_vkCmdDispatchGraphIndirectCountAMDX;
    public final MemorySegment PFN_vkCmdSetSampleLocationsEXT;
    public final MemorySegment PFN_vkGetImageMemoryRequirements2KHR;
    public final MemorySegment PFN_vkGetBufferMemoryRequirements2KHR;
    public final MemorySegment PFN_vkGetImageSparseMemoryRequirements2KHR;
    public final MemorySegment PFN_vkCreateAccelerationStructureKHR;
    public final MemorySegment PFN_vkDestroyAccelerationStructureKHR;
    public final MemorySegment PFN_vkCmdBuildAccelerationStructuresKHR;
    public final MemorySegment PFN_vkCmdBuildAccelerationStructuresIndirectKHR;
    public final MemorySegment PFN_vkBuildAccelerationStructuresKHR;
    public final MemorySegment PFN_vkCopyAccelerationStructureKHR;
    public final MemorySegment PFN_vkCopyAccelerationStructureToMemoryKHR;
    public final MemorySegment PFN_vkCopyMemoryToAccelerationStructureKHR;
    public final MemorySegment PFN_vkWriteAccelerationStructuresPropertiesKHR;
    public final MemorySegment PFN_vkCmdCopyAccelerationStructureKHR;
    public final MemorySegment PFN_vkCmdCopyAccelerationStructureToMemoryKHR;
    public final MemorySegment PFN_vkCmdCopyMemoryToAccelerationStructureKHR;
    public final MemorySegment PFN_vkGetAccelerationStructureDeviceAddressKHR;
    public final MemorySegment PFN_vkCmdWriteAccelerationStructuresPropertiesKHR;
    public final MemorySegment PFN_vkGetDeviceAccelerationStructureCompatibilityKHR;
    public final MemorySegment PFN_vkGetAccelerationStructureBuildSizesKHR;
    public final MemorySegment PFN_vkCmdTraceRaysKHR;
    public final MemorySegment PFN_vkCreateRayTracingPipelinesKHR;
    public final MemorySegment PFN_vkGetRayTracingShaderGroupHandlesKHR;
    public final MemorySegment PFN_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR;
    public final MemorySegment PFN_vkCmdTraceRaysIndirectKHR;
    public final MemorySegment PFN_vkGetRayTracingShaderGroupStackSizeKHR;
    public final MemorySegment PFN_vkCmdSetRayTracingPipelineStackSizeKHR;
    public final MemorySegment PFN_vkCreateSamplerYcbcrConversionKHR;
    public final MemorySegment PFN_vkDestroySamplerYcbcrConversionKHR;
    public final MemorySegment PFN_vkBindBufferMemory2KHR;
    public final MemorySegment PFN_vkBindImageMemory2KHR;
    public final MemorySegment PFN_vkGetImageDrmFormatModifierPropertiesEXT;
    public final MemorySegment PFN_vkCreateValidationCacheEXT;
    public final MemorySegment PFN_vkDestroyValidationCacheEXT;
    public final MemorySegment PFN_vkMergeValidationCachesEXT;
    public final MemorySegment PFN_vkGetValidationCacheDataEXT;
    public final MemorySegment PFN_vkCmdBindShadingRateImageNV;
    public final MemorySegment PFN_vkCmdSetViewportShadingRatePaletteNV;
    public final MemorySegment PFN_vkCmdSetCoarseSampleOrderNV;
    public final MemorySegment PFN_vkCreateAccelerationStructureNV;
    public final MemorySegment PFN_vkDestroyAccelerationStructureNV;
    public final MemorySegment PFN_vkGetAccelerationStructureMemoryRequirementsNV;
    public final MemorySegment PFN_vkBindAccelerationStructureMemoryNV;
    public final MemorySegment PFN_vkCmdBuildAccelerationStructureNV;
    public final MemorySegment PFN_vkCmdCopyAccelerationStructureNV;
    public final MemorySegment PFN_vkCmdTraceRaysNV;
    public final MemorySegment PFN_vkCreateRayTracingPipelinesNV;
    public final MemorySegment PFN_vkGetRayTracingShaderGroupHandlesNV;
    public final MemorySegment PFN_vkGetAccelerationStructureHandleNV;
    public final MemorySegment PFN_vkCmdWriteAccelerationStructuresPropertiesNV;
    public final MemorySegment PFN_vkCompileDeferredNV;
    public final MemorySegment PFN_vkGetDescriptorSetLayoutSupportKHR;
    public final MemorySegment PFN_vkCmdDrawIndirectCountKHR;
    public final MemorySegment PFN_vkCmdDrawIndexedIndirectCountKHR;
    public final MemorySegment PFN_vkGetMemoryHostPointerPropertiesEXT;
    public final MemorySegment PFN_vkCmdWriteBufferMarkerAMD;
    public final MemorySegment PFN_vkCmdWriteBufferMarker2AMD;
    public final MemorySegment PFN_vkGetCalibratedTimestampsEXT;
    public final MemorySegment PFN_vkCmdDrawMeshTasksNV;
    public final MemorySegment PFN_vkCmdDrawMeshTasksIndirectNV;
    public final MemorySegment PFN_vkCmdDrawMeshTasksIndirectCountNV;
    public final MemorySegment PFN_vkCmdSetExclusiveScissorEnableNV;
    public final MemorySegment PFN_vkCmdSetExclusiveScissorNV;
    public final MemorySegment PFN_vkCmdSetCheckpointNV;
    public final MemorySegment PFN_vkGetQueueCheckpointDataNV;
    public final MemorySegment PFN_vkGetQueueCheckpointData2NV;
    public final MemorySegment PFN_vkGetSemaphoreCounterValueKHR;
    public final MemorySegment PFN_vkWaitSemaphoresKHR;
    public final MemorySegment PFN_vkSignalSemaphoreKHR;
    public final MemorySegment PFN_vkInitializePerformanceApiINTEL;
    public final MemorySegment PFN_vkUninitializePerformanceApiINTEL;
    public final MemorySegment PFN_vkCmdSetPerformanceMarkerINTEL;
    public final MemorySegment PFN_vkCmdSetPerformanceStreamMarkerINTEL;
    public final MemorySegment PFN_vkCmdSetPerformanceOverrideINTEL;
    public final MemorySegment PFN_vkAcquirePerformanceConfigurationINTEL;
    public final MemorySegment PFN_vkReleasePerformanceConfigurationINTEL;
    public final MemorySegment PFN_vkQueueSetPerformanceConfigurationINTEL;
    public final MemorySegment PFN_vkGetPerformanceParameterINTEL;
    public final MemorySegment PFN_vkSetLocalDimmingAMD;
    public final MemorySegment PFN_vkCmdSetFragmentShadingRateKHR;
    public final MemorySegment PFN_vkCmdSetRenderingAttachmentLocationsKHR;
    public final MemorySegment PFN_vkCmdSetRenderingInputAttachmentIndicesKHR;
    public final MemorySegment PFN_vkGetBufferDeviceAddressEXT;
    public final MemorySegment PFN_vkWaitForPresentKHR;
    public final MemorySegment PFN_vkAcquireFullScreenExclusiveModeEXT;
    public final MemorySegment PFN_vkReleaseFullScreenExclusiveModeEXT;
    public final MemorySegment PFN_vkGetDeviceGroupSurfacePresentModes2EXT;
    public final MemorySegment PFN_vkGetBufferDeviceAddressKHR;
    public final MemorySegment PFN_vkGetBufferOpaqueCaptureAddressKHR;
    public final MemorySegment PFN_vkGetDeviceMemoryOpaqueCaptureAddressKHR;
    public final MemorySegment PFN_vkCmdSetLineStippleEXT;
    public final MemorySegment PFN_vkResetQueryPoolEXT;
    public final MemorySegment PFN_vkCmdSetCullModeEXT;
    public final MemorySegment PFN_vkCmdSetFrontFaceEXT;
    public final MemorySegment PFN_vkCmdSetPrimitiveTopologyEXT;
    public final MemorySegment PFN_vkCmdSetViewportWithCountEXT;
    public final MemorySegment PFN_vkCmdSetScissorWithCountEXT;
    public final MemorySegment PFN_vkCmdBindVertexBuffers2EXT;
    public final MemorySegment PFN_vkCmdSetDepthTestEnableEXT;
    public final MemorySegment PFN_vkCmdSetDepthWriteEnableEXT;
    public final MemorySegment PFN_vkCmdSetDepthCompareOpEXT;
    public final MemorySegment PFN_vkCmdSetDepthBoundsTestEnableEXT;
    public final MemorySegment PFN_vkCmdSetStencilTestEnableEXT;
    public final MemorySegment PFN_vkCmdSetStencilOpEXT;
    public final MemorySegment PFN_vkCreateDeferredOperationKHR;
    public final MemorySegment PFN_vkDestroyDeferredOperationKHR;
    public final MemorySegment PFN_vkGetDeferredOperationMaxConcurrencyKHR;
    public final MemorySegment PFN_vkGetDeferredOperationResultKHR;
    public final MemorySegment PFN_vkDeferredOperationJoinKHR;
    public final MemorySegment PFN_vkGetPipelineExecutablePropertiesKHR;
    public final MemorySegment PFN_vkGetPipelineExecutableStatisticsKHR;
    public final MemorySegment PFN_vkGetPipelineExecutableInternalRepresentationsKHR;
    public final MemorySegment PFN_vkCopyMemoryToImageEXT;
    public final MemorySegment PFN_vkCopyImageToMemoryEXT;
    public final MemorySegment PFN_vkCopyImageToImageEXT;
    public final MemorySegment PFN_vkTransitionImageLayoutEXT;
    public final MemorySegment PFN_vkGetImageSubresourceLayout2EXT;
    public final MemorySegment PFN_vkMapMemory2KHR;
    public final MemorySegment PFN_vkUnmapMemory2KHR;
    public final MemorySegment PFN_vkReleaseSwapchainImagesEXT;
    public final MemorySegment PFN_vkGetGeneratedCommandsMemoryRequirementsNV;
    public final MemorySegment PFN_vkCmdPreprocessGeneratedCommandsNV;
    public final MemorySegment PFN_vkCmdExecuteGeneratedCommandsNV;
    public final MemorySegment PFN_vkCmdBindPipelineShaderGroupNV;
    public final MemorySegment PFN_vkCreateIndirectCommandsLayoutNV;
    public final MemorySegment PFN_vkDestroyIndirectCommandsLayoutNV;
    public final MemorySegment PFN_vkCmdSetDepthBias2EXT;
    public final MemorySegment PFN_vkCreatePrivateDataSlotEXT;
    public final MemorySegment PFN_vkDestroyPrivateDataSlotEXT;
    public final MemorySegment PFN_vkSetPrivateDataEXT;
    public final MemorySegment PFN_vkGetPrivateDataEXT;
    public final MemorySegment PFN_vkGetEncodedVideoSessionParametersKHR;
    public final MemorySegment PFN_vkCmdEncodeVideoKHR;
    public final MemorySegment PFN_vkCreateCudaModuleNV;
    public final MemorySegment PFN_vkGetCudaModuleCacheNV;
    public final MemorySegment PFN_vkCreateCudaFunctionNV;
    public final MemorySegment PFN_vkDestroyCudaModuleNV;
    public final MemorySegment PFN_vkDestroyCudaFunctionNV;
    public final MemorySegment PFN_vkCmdCudaLaunchKernelNV;
    public final MemorySegment PFN_vkCmdDispatchTileQCOM;
    public final MemorySegment PFN_vkCmdBeginPerTileExecutionQCOM;
    public final MemorySegment PFN_vkCmdEndPerTileExecutionQCOM;
    public final MemorySegment PFN_vkExportMetalObjectsEXT;
    public final MemorySegment PFN_vkCmdSetEvent2KHR;
    public final MemorySegment PFN_vkCmdResetEvent2KHR;
    public final MemorySegment PFN_vkCmdWaitEvents2KHR;
    public final MemorySegment PFN_vkCmdPipelineBarrier2KHR;
    public final MemorySegment PFN_vkCmdWriteTimestamp2KHR;
    public final MemorySegment PFN_vkQueueSubmit2KHR;
    public final MemorySegment PFN_vkGetDescriptorSetLayoutSizeEXT;
    public final MemorySegment PFN_vkGetDescriptorSetLayoutBindingOffsetEXT;
    public final MemorySegment PFN_vkGetDescriptorEXT;
    public final MemorySegment PFN_vkCmdBindDescriptorBuffersEXT;
    public final MemorySegment PFN_vkCmdSetDescriptorBufferOffsetsEXT;
    public final MemorySegment PFN_vkCmdBindDescriptorBufferEmbeddedSamplersEXT;
    public final MemorySegment PFN_vkGetBufferOpaqueCaptureDescriptorDataEXT;
    public final MemorySegment PFN_vkGetImageOpaqueCaptureDescriptorDataEXT;
    public final MemorySegment PFN_vkGetImageViewOpaqueCaptureDescriptorDataEXT;
    public final MemorySegment PFN_vkGetSamplerOpaqueCaptureDescriptorDataEXT;
    public final MemorySegment PFN_vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT;
    public final MemorySegment PFN_vkCmdSetFragmentShadingRateEnumNV;
    public final MemorySegment PFN_vkCmdDrawMeshTasksEXT;
    public final MemorySegment PFN_vkCmdDrawMeshTasksIndirectEXT;
    public final MemorySegment PFN_vkCmdDrawMeshTasksIndirectCountEXT;
    public final MemorySegment PFN_vkCmdCopyBuffer2KHR;
    public final MemorySegment PFN_vkCmdCopyImage2KHR;
    public final MemorySegment PFN_vkCmdCopyBufferToImage2KHR;
    public final MemorySegment PFN_vkCmdCopyImageToBuffer2KHR;
    public final MemorySegment PFN_vkCmdBlitImage2KHR;
    public final MemorySegment PFN_vkCmdResolveImage2KHR;
    public final MemorySegment PFN_vkGetDeviceFaultInfoEXT;
    public final MemorySegment PFN_vkCmdSetVertexInputEXT;
    public final MemorySegment PFN_vkGetMemoryZirconHandleFUCHSIA;
    public final MemorySegment PFN_vkGetMemoryZirconHandlePropertiesFUCHSIA;
    public final MemorySegment PFN_vkImportSemaphoreZirconHandleFUCHSIA;
    public final MemorySegment PFN_vkGetSemaphoreZirconHandleFUCHSIA;
    public final MemorySegment PFN_vkCreateBufferCollectionFUCHSIA;
    public final MemorySegment PFN_vkSetBufferCollectionImageConstraintsFUCHSIA;
    public final MemorySegment PFN_vkSetBufferCollectionBufferConstraintsFUCHSIA;
    public final MemorySegment PFN_vkDestroyBufferCollectionFUCHSIA;
    public final MemorySegment PFN_vkGetBufferCollectionPropertiesFUCHSIA;
    public final MemorySegment PFN_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI;
    public final MemorySegment PFN_vkCmdSubpassShadingHUAWEI;
    public final MemorySegment PFN_vkCmdBindInvocationMaskHUAWEI;
    public final MemorySegment PFN_vkGetMemoryRemoteAddressNV;
    public final MemorySegment PFN_vkGetPipelinePropertiesEXT;
    public final MemorySegment PFN_vkCmdSetPatchControlPointsEXT;
    public final MemorySegment PFN_vkCmdSetRasterizerDiscardEnableEXT;
    public final MemorySegment PFN_vkCmdSetDepthBiasEnableEXT;
    public final MemorySegment PFN_vkCmdSetLogicOpEXT;
    public final MemorySegment PFN_vkCmdSetPrimitiveRestartEnableEXT;
    public final MemorySegment PFN_vkCmdSetColorWriteEnableEXT;
    public final MemorySegment PFN_vkCmdTraceRaysIndirect2KHR;
    public final MemorySegment PFN_vkCmdDrawMultiEXT;
    public final MemorySegment PFN_vkCmdDrawMultiIndexedEXT;
    public final MemorySegment PFN_vkCreateMicromapEXT;
    public final MemorySegment PFN_vkDestroyMicromapEXT;
    public final MemorySegment PFN_vkCmdBuildMicromapsEXT;
    public final MemorySegment PFN_vkBuildMicromapsEXT;
    public final MemorySegment PFN_vkCopyMicromapEXT;
    public final MemorySegment PFN_vkCopyMicromapToMemoryEXT;
    public final MemorySegment PFN_vkCopyMemoryToMicromapEXT;
    public final MemorySegment PFN_vkWriteMicromapsPropertiesEXT;
    public final MemorySegment PFN_vkCmdCopyMicromapEXT;
    public final MemorySegment PFN_vkCmdCopyMicromapToMemoryEXT;
    public final MemorySegment PFN_vkCmdCopyMemoryToMicromapEXT;
    public final MemorySegment PFN_vkCmdWriteMicromapsPropertiesEXT;
    public final MemorySegment PFN_vkGetDeviceMicromapCompatibilityEXT;
    public final MemorySegment PFN_vkGetMicromapBuildSizesEXT;
    public final MemorySegment PFN_vkCmdDrawClusterHUAWEI;
    public final MemorySegment PFN_vkCmdDrawClusterIndirectHUAWEI;
    public final MemorySegment PFN_vkSetDeviceMemoryPriorityEXT;
    public final MemorySegment PFN_vkGetDeviceBufferMemoryRequirementsKHR;
    public final MemorySegment PFN_vkGetDeviceImageMemoryRequirementsKHR;
    public final MemorySegment PFN_vkGetDeviceImageSparseMemoryRequirementsKHR;
    public final MemorySegment PFN_vkGetDescriptorSetLayoutHostMappingInfoVALVE;
    public final MemorySegment PFN_vkGetDescriptorSetHostMappingVALVE;
    public final MemorySegment PFN_vkCmdCopyMemoryIndirectNV;
    public final MemorySegment PFN_vkCmdCopyMemoryToImageIndirectNV;
    public final MemorySegment PFN_vkCmdDecompressMemoryNV;
    public final MemorySegment PFN_vkCmdDecompressMemoryIndirectCountNV;
    public final MemorySegment PFN_vkGetPipelineIndirectMemoryRequirementsNV;
    public final MemorySegment PFN_vkCmdUpdatePipelineIndirectBufferNV;
    public final MemorySegment PFN_vkGetPipelineIndirectDeviceAddressNV;
    public final MemorySegment PFN_vkCmdSetDepthClampEnableEXT;
    public final MemorySegment PFN_vkCmdSetPolygonModeEXT;
    public final MemorySegment PFN_vkCmdSetRasterizationSamplesEXT;
    public final MemorySegment PFN_vkCmdSetSampleMaskEXT;
    public final MemorySegment PFN_vkCmdSetAlphaToCoverageEnableEXT;
    public final MemorySegment PFN_vkCmdSetAlphaToOneEnableEXT;
    public final MemorySegment PFN_vkCmdSetLogicOpEnableEXT;
    public final MemorySegment PFN_vkCmdSetColorBlendEnableEXT;
    public final MemorySegment PFN_vkCmdSetColorBlendEquationEXT;
    public final MemorySegment PFN_vkCmdSetColorWriteMaskEXT;
    public final MemorySegment PFN_vkCmdSetTessellationDomainOriginEXT;
    public final MemorySegment PFN_vkCmdSetRasterizationStreamEXT;
    public final MemorySegment PFN_vkCmdSetConservativeRasterizationModeEXT;
    public final MemorySegment PFN_vkCmdSetExtraPrimitiveOverestimationSizeEXT;
    public final MemorySegment PFN_vkCmdSetDepthClipEnableEXT;
    public final MemorySegment PFN_vkCmdSetSampleLocationsEnableEXT;
    public final MemorySegment PFN_vkCmdSetColorBlendAdvancedEXT;
    public final MemorySegment PFN_vkCmdSetProvokingVertexModeEXT;
    public final MemorySegment PFN_vkCmdSetLineRasterizationModeEXT;
    public final MemorySegment PFN_vkCmdSetLineStippleEnableEXT;
    public final MemorySegment PFN_vkCmdSetDepthClipNegativeOneToOneEXT;
    public final MemorySegment PFN_vkCmdSetViewportWScalingEnableNV;
    public final MemorySegment PFN_vkCmdSetViewportSwizzleNV;
    public final MemorySegment PFN_vkCmdSetCoverageToColorEnableNV;
    public final MemorySegment PFN_vkCmdSetCoverageToColorLocationNV;
    public final MemorySegment PFN_vkCmdSetCoverageModulationModeNV;
    public final MemorySegment PFN_vkCmdSetCoverageModulationTableEnableNV;
    public final MemorySegment PFN_vkCmdSetCoverageModulationTableNV;
    public final MemorySegment PFN_vkCmdSetShadingRateImageEnableNV;
    public final MemorySegment PFN_vkCmdSetRepresentativeFragmentTestEnableNV;
    public final MemorySegment PFN_vkCmdSetCoverageReductionModeNV;
    public final MemorySegment PFN_vkCreateTensorARM;
    public final MemorySegment PFN_vkDestroyTensorARM;
    public final MemorySegment PFN_vkCreateTensorViewARM;
    public final MemorySegment PFN_vkDestroyTensorViewARM;
    public final MemorySegment PFN_vkGetTensorMemoryRequirementsARM;
    public final MemorySegment PFN_vkBindTensorMemoryARM;
    public final MemorySegment PFN_vkGetDeviceTensorMemoryRequirementsARM;
    public final MemorySegment PFN_vkCmdCopyTensorARM;
    public final MemorySegment PFN_vkGetTensorOpaqueCaptureDescriptorDataARM;
    public final MemorySegment PFN_vkGetTensorViewOpaqueCaptureDescriptorDataARM;
    public final MemorySegment PFN_vkGetShaderModuleIdentifierEXT;
    public final MemorySegment PFN_vkGetShaderModuleCreateInfoIdentifierEXT;
    public final MemorySegment PFN_vkCreateOpticalFlowSessionNV;
    public final MemorySegment PFN_vkDestroyOpticalFlowSessionNV;
    public final MemorySegment PFN_vkBindOpticalFlowSessionImageNV;
    public final MemorySegment PFN_vkCmdOpticalFlowExecuteNV;
    public final MemorySegment PFN_vkCmdBindIndexBuffer2KHR;
    public final MemorySegment PFN_vkGetRenderingAreaGranularityKHR;
    public final MemorySegment PFN_vkGetDeviceImageSubresourceLayoutKHR;
    public final MemorySegment PFN_vkGetImageSubresourceLayout2KHR;
    public final MemorySegment PFN_vkAntiLagUpdateAMD;
    public final MemorySegment PFN_vkWaitForPresent2KHR;
    public final MemorySegment PFN_vkCreateShadersEXT;
    public final MemorySegment PFN_vkDestroyShaderEXT;
    public final MemorySegment PFN_vkGetShaderBinaryDataEXT;
    public final MemorySegment PFN_vkCmdBindShadersEXT;
    public final MemorySegment PFN_vkCmdSetDepthClampRangeEXT;
    public final MemorySegment PFN_vkCreatePipelineBinariesKHR;
    public final MemorySegment PFN_vkDestroyPipelineBinaryKHR;
    public final MemorySegment PFN_vkGetPipelineKeyKHR;
    public final MemorySegment PFN_vkGetPipelineBinaryDataKHR;
    public final MemorySegment PFN_vkReleaseCapturedPipelineDataKHR;
    public final MemorySegment PFN_vkGetFramebufferTilePropertiesQCOM;
    public final MemorySegment PFN_vkGetDynamicRenderingTilePropertiesQCOM;
    public final MemorySegment PFN_vkConvertCooperativeVectorMatrixNV;
    public final MemorySegment PFN_vkCmdConvertCooperativeVectorMatrixNV;
    public final MemorySegment PFN_vkSetLatencySleepModeNV;
    public final MemorySegment PFN_vkLatencySleepNV;
    public final MemorySegment PFN_vkSetLatencyMarkerNV;
    public final MemorySegment PFN_vkGetLatencyTimingsNV;
    public final MemorySegment PFN_vkQueueNotifyOutOfBandNV;
    public final MemorySegment PFN_vkCreateDataGraphPipelinesARM;
    public final MemorySegment PFN_vkCreateDataGraphPipelineSessionARM;
    public final MemorySegment PFN_vkGetDataGraphPipelineSessionBindPointRequirementsARM;
    public final MemorySegment PFN_vkGetDataGraphPipelineSessionMemoryRequirementsARM;
    public final MemorySegment PFN_vkBindDataGraphPipelineSessionMemoryARM;
    public final MemorySegment PFN_vkDestroyDataGraphPipelineSessionARM;
    public final MemorySegment PFN_vkCmdDispatchDataGraphARM;
    public final MemorySegment PFN_vkGetDataGraphPipelineAvailablePropertiesARM;
    public final MemorySegment PFN_vkGetDataGraphPipelinePropertiesARM;
    public final MemorySegment PFN_vkCmdSetAttachmentFeedbackLoopEnableEXT;
    public final MemorySegment PFN_vkGetScreenBufferPropertiesQNX;
    public final MemorySegment PFN_vkCmdSetLineStippleKHR;
    public final MemorySegment PFN_vkGetCalibratedTimestampsKHR;
    public final MemorySegment PFN_vkCmdBindDescriptorSets2KHR;
    public final MemorySegment PFN_vkCmdPushConstants2KHR;
    public final MemorySegment PFN_vkCmdPushDescriptorSet2KHR;
    public final MemorySegment PFN_vkCmdPushDescriptorSetWithTemplate2KHR;
    public final MemorySegment PFN_vkCmdSetDescriptorBufferOffsets2EXT;
    public final MemorySegment PFN_vkCmdBindDescriptorBufferEmbeddedSamplers2EXT;
    public final MemorySegment PFN_vkCmdBindTileMemoryQCOM;
    public final MemorySegment PFN_vkCreateExternalComputeQueueNV;
    public final MemorySegment PFN_vkDestroyExternalComputeQueueNV;
    public final MemorySegment PFN_vkGetExternalComputeQueueDataNV;
    public final MemorySegment PFN_vkGetClusterAccelerationStructureBuildSizesNV;
    public final MemorySegment PFN_vkCmdBuildClusterAccelerationStructureIndirectNV;
    public final MemorySegment PFN_vkGetPartitionedAccelerationStructuresBuildSizesNV;
    public final MemorySegment PFN_vkCmdBuildPartitionedAccelerationStructuresNV;
    public final MemorySegment PFN_vkGetGeneratedCommandsMemoryRequirementsEXT;
    public final MemorySegment PFN_vkCmdPreprocessGeneratedCommandsEXT;
    public final MemorySegment PFN_vkCmdExecuteGeneratedCommandsEXT;
    public final MemorySegment PFN_vkCreateIndirectCommandsLayoutEXT;
    public final MemorySegment PFN_vkDestroyIndirectCommandsLayoutEXT;
    public final MemorySegment PFN_vkCreateIndirectExecutionSetEXT;
    public final MemorySegment PFN_vkDestroyIndirectExecutionSetEXT;
    public final MemorySegment PFN_vkUpdateIndirectExecutionSetPipelineEXT;
    public final MemorySegment PFN_vkUpdateIndirectExecutionSetShaderEXT;
    public final MemorySegment PFN_vkGetMemoryMetalHandleEXT;
    public final MemorySegment PFN_vkGetMemoryMetalHandlePropertiesEXT;
    public final MemorySegment PFN_vkCmdEndRendering2EXT;
    public VKCapabilitiesDevice(MemorySegment device, VKLoadFunc func) {
        PFN_vkGetDeviceProcAddr = func.invoke(device, "vkGetDeviceProcAddr");
        PFN_vkDestroyDevice = func.invoke(device, "vkDestroyDevice");
        PFN_vkGetDeviceQueue = func.invoke(device, "vkGetDeviceQueue");
        PFN_vkQueueSubmit = func.invoke(device, "vkQueueSubmit");
        PFN_vkQueueWaitIdle = func.invoke(device, "vkQueueWaitIdle");
        PFN_vkDeviceWaitIdle = func.invoke(device, "vkDeviceWaitIdle");
        PFN_vkAllocateMemory = func.invoke(device, "vkAllocateMemory");
        PFN_vkFreeMemory = func.invoke(device, "vkFreeMemory");
        PFN_vkMapMemory = func.invoke(device, "vkMapMemory");
        PFN_vkUnmapMemory = func.invoke(device, "vkUnmapMemory");
        PFN_vkFlushMappedMemoryRanges = func.invoke(device, "vkFlushMappedMemoryRanges");
        PFN_vkInvalidateMappedMemoryRanges = func.invoke(device, "vkInvalidateMappedMemoryRanges");
        PFN_vkGetDeviceMemoryCommitment = func.invoke(device, "vkGetDeviceMemoryCommitment");
        PFN_vkBindBufferMemory = func.invoke(device, "vkBindBufferMemory");
        PFN_vkBindImageMemory = func.invoke(device, "vkBindImageMemory");
        PFN_vkGetBufferMemoryRequirements = func.invoke(device, "vkGetBufferMemoryRequirements");
        PFN_vkGetImageMemoryRequirements = func.invoke(device, "vkGetImageMemoryRequirements");
        PFN_vkGetImageSparseMemoryRequirements = func.invoke(device, "vkGetImageSparseMemoryRequirements");
        PFN_vkQueueBindSparse = func.invoke(device, "vkQueueBindSparse");
        PFN_vkCreateFence = func.invoke(device, "vkCreateFence");
        PFN_vkDestroyFence = func.invoke(device, "vkDestroyFence");
        PFN_vkResetFences = func.invoke(device, "vkResetFences");
        PFN_vkGetFenceStatus = func.invoke(device, "vkGetFenceStatus");
        PFN_vkWaitForFences = func.invoke(device, "vkWaitForFences");
        PFN_vkCreateSemaphore = func.invoke(device, "vkCreateSemaphore");
        PFN_vkDestroySemaphore = func.invoke(device, "vkDestroySemaphore");
        PFN_vkCreateEvent = func.invoke(device, "vkCreateEvent");
        PFN_vkDestroyEvent = func.invoke(device, "vkDestroyEvent");
        PFN_vkGetEventStatus = func.invoke(device, "vkGetEventStatus");
        PFN_vkSetEvent = func.invoke(device, "vkSetEvent");
        PFN_vkResetEvent = func.invoke(device, "vkResetEvent");
        PFN_vkCreateQueryPool = func.invoke(device, "vkCreateQueryPool");
        PFN_vkDestroyQueryPool = func.invoke(device, "vkDestroyQueryPool");
        PFN_vkGetQueryPoolResults = func.invoke(device, "vkGetQueryPoolResults");
        PFN_vkCreateBuffer = func.invoke(device, "vkCreateBuffer");
        PFN_vkDestroyBuffer = func.invoke(device, "vkDestroyBuffer");
        PFN_vkCreateBufferView = func.invoke(device, "vkCreateBufferView");
        PFN_vkDestroyBufferView = func.invoke(device, "vkDestroyBufferView");
        PFN_vkCreateImage = func.invoke(device, "vkCreateImage");
        PFN_vkDestroyImage = func.invoke(device, "vkDestroyImage");
        PFN_vkGetImageSubresourceLayout = func.invoke(device, "vkGetImageSubresourceLayout");
        PFN_vkCreateImageView = func.invoke(device, "vkCreateImageView");
        PFN_vkDestroyImageView = func.invoke(device, "vkDestroyImageView");
        PFN_vkCreateShaderModule = func.invoke(device, "vkCreateShaderModule");
        PFN_vkDestroyShaderModule = func.invoke(device, "vkDestroyShaderModule");
        PFN_vkCreatePipelineCache = func.invoke(device, "vkCreatePipelineCache");
        PFN_vkDestroyPipelineCache = func.invoke(device, "vkDestroyPipelineCache");
        PFN_vkGetPipelineCacheData = func.invoke(device, "vkGetPipelineCacheData");
        PFN_vkMergePipelineCaches = func.invoke(device, "vkMergePipelineCaches");
        PFN_vkCreateGraphicsPipelines = func.invoke(device, "vkCreateGraphicsPipelines");
        PFN_vkCreateComputePipelines = func.invoke(device, "vkCreateComputePipelines");
        PFN_vkDestroyPipeline = func.invoke(device, "vkDestroyPipeline");
        PFN_vkCreatePipelineLayout = func.invoke(device, "vkCreatePipelineLayout");
        PFN_vkDestroyPipelineLayout = func.invoke(device, "vkDestroyPipelineLayout");
        PFN_vkCreateSampler = func.invoke(device, "vkCreateSampler");
        PFN_vkDestroySampler = func.invoke(device, "vkDestroySampler");
        PFN_vkCreateDescriptorSetLayout = func.invoke(device, "vkCreateDescriptorSetLayout");
        PFN_vkDestroyDescriptorSetLayout = func.invoke(device, "vkDestroyDescriptorSetLayout");
        PFN_vkCreateDescriptorPool = func.invoke(device, "vkCreateDescriptorPool");
        PFN_vkDestroyDescriptorPool = func.invoke(device, "vkDestroyDescriptorPool");
        PFN_vkResetDescriptorPool = func.invoke(device, "vkResetDescriptorPool");
        PFN_vkAllocateDescriptorSets = func.invoke(device, "vkAllocateDescriptorSets");
        PFN_vkFreeDescriptorSets = func.invoke(device, "vkFreeDescriptorSets");
        PFN_vkUpdateDescriptorSets = func.invoke(device, "vkUpdateDescriptorSets");
        PFN_vkCreateFramebuffer = func.invoke(device, "vkCreateFramebuffer");
        PFN_vkDestroyFramebuffer = func.invoke(device, "vkDestroyFramebuffer");
        PFN_vkCreateRenderPass = func.invoke(device, "vkCreateRenderPass");
        PFN_vkDestroyRenderPass = func.invoke(device, "vkDestroyRenderPass");
        PFN_vkGetRenderAreaGranularity = func.invoke(device, "vkGetRenderAreaGranularity");
        PFN_vkCreateCommandPool = func.invoke(device, "vkCreateCommandPool");
        PFN_vkDestroyCommandPool = func.invoke(device, "vkDestroyCommandPool");
        PFN_vkResetCommandPool = func.invoke(device, "vkResetCommandPool");
        PFN_vkAllocateCommandBuffers = func.invoke(device, "vkAllocateCommandBuffers");
        PFN_vkFreeCommandBuffers = func.invoke(device, "vkFreeCommandBuffers");
        PFN_vkBeginCommandBuffer = func.invoke(device, "vkBeginCommandBuffer");
        PFN_vkEndCommandBuffer = func.invoke(device, "vkEndCommandBuffer");
        PFN_vkResetCommandBuffer = func.invoke(device, "vkResetCommandBuffer");
        PFN_vkCmdBindPipeline = func.invoke(device, "vkCmdBindPipeline");
        PFN_vkCmdSetViewport = func.invoke(device, "vkCmdSetViewport");
        PFN_vkCmdSetScissor = func.invoke(device, "vkCmdSetScissor");
        PFN_vkCmdSetLineWidth = func.invoke(device, "vkCmdSetLineWidth");
        PFN_vkCmdSetDepthBias = func.invoke(device, "vkCmdSetDepthBias");
        PFN_vkCmdSetBlendConstants = func.invoke(device, "vkCmdSetBlendConstants");
        PFN_vkCmdSetDepthBounds = func.invoke(device, "vkCmdSetDepthBounds");
        PFN_vkCmdSetStencilCompareMask = func.invoke(device, "vkCmdSetStencilCompareMask");
        PFN_vkCmdSetStencilWriteMask = func.invoke(device, "vkCmdSetStencilWriteMask");
        PFN_vkCmdSetStencilReference = func.invoke(device, "vkCmdSetStencilReference");
        PFN_vkCmdBindDescriptorSets = func.invoke(device, "vkCmdBindDescriptorSets");
        PFN_vkCmdBindIndexBuffer = func.invoke(device, "vkCmdBindIndexBuffer");
        PFN_vkCmdBindVertexBuffers = func.invoke(device, "vkCmdBindVertexBuffers");
        PFN_vkCmdDraw = func.invoke(device, "vkCmdDraw");
        PFN_vkCmdDrawIndexed = func.invoke(device, "vkCmdDrawIndexed");
        PFN_vkCmdDrawIndirect = func.invoke(device, "vkCmdDrawIndirect");
        PFN_vkCmdDrawIndexedIndirect = func.invoke(device, "vkCmdDrawIndexedIndirect");
        PFN_vkCmdDispatch = func.invoke(device, "vkCmdDispatch");
        PFN_vkCmdDispatchIndirect = func.invoke(device, "vkCmdDispatchIndirect");
        PFN_vkCmdCopyBuffer = func.invoke(device, "vkCmdCopyBuffer");
        PFN_vkCmdCopyImage = func.invoke(device, "vkCmdCopyImage");
        PFN_vkCmdBlitImage = func.invoke(device, "vkCmdBlitImage");
        PFN_vkCmdCopyBufferToImage = func.invoke(device, "vkCmdCopyBufferToImage");
        PFN_vkCmdCopyImageToBuffer = func.invoke(device, "vkCmdCopyImageToBuffer");
        PFN_vkCmdUpdateBuffer = func.invoke(device, "vkCmdUpdateBuffer");
        PFN_vkCmdFillBuffer = func.invoke(device, "vkCmdFillBuffer");
        PFN_vkCmdClearColorImage = func.invoke(device, "vkCmdClearColorImage");
        PFN_vkCmdClearDepthStencilImage = func.invoke(device, "vkCmdClearDepthStencilImage");
        PFN_vkCmdClearAttachments = func.invoke(device, "vkCmdClearAttachments");
        PFN_vkCmdResolveImage = func.invoke(device, "vkCmdResolveImage");
        PFN_vkCmdSetEvent = func.invoke(device, "vkCmdSetEvent");
        PFN_vkCmdResetEvent = func.invoke(device, "vkCmdResetEvent");
        PFN_vkCmdWaitEvents = func.invoke(device, "vkCmdWaitEvents");
        PFN_vkCmdPipelineBarrier = func.invoke(device, "vkCmdPipelineBarrier");
        PFN_vkCmdBeginQuery = func.invoke(device, "vkCmdBeginQuery");
        PFN_vkCmdEndQuery = func.invoke(device, "vkCmdEndQuery");
        PFN_vkCmdResetQueryPool = func.invoke(device, "vkCmdResetQueryPool");
        PFN_vkCmdWriteTimestamp = func.invoke(device, "vkCmdWriteTimestamp");
        PFN_vkCmdCopyQueryPoolResults = func.invoke(device, "vkCmdCopyQueryPoolResults");
        PFN_vkCmdPushConstants = func.invoke(device, "vkCmdPushConstants");
        PFN_vkCmdBeginRenderPass = func.invoke(device, "vkCmdBeginRenderPass");
        PFN_vkCmdNextSubpass = func.invoke(device, "vkCmdNextSubpass");
        PFN_vkCmdEndRenderPass = func.invoke(device, "vkCmdEndRenderPass");
        PFN_vkCmdExecuteCommands = func.invoke(device, "vkCmdExecuteCommands");
        PFN_vkBindBufferMemory2 = func.invoke(device, "vkBindBufferMemory2", "vkBindBufferMemory2KHR");
        PFN_vkBindImageMemory2 = func.invoke(device, "vkBindImageMemory2", "vkBindImageMemory2KHR");
        PFN_vkGetDeviceGroupPeerMemoryFeatures = func.invoke(device, "vkGetDeviceGroupPeerMemoryFeatures", "vkGetDeviceGroupPeerMemoryFeaturesKHR");
        PFN_vkCmdSetDeviceMask = func.invoke(device, "vkCmdSetDeviceMask", "vkCmdSetDeviceMaskKHR");
        PFN_vkCmdDispatchBase = func.invoke(device, "vkCmdDispatchBase", "vkCmdDispatchBaseKHR");
        PFN_vkGetImageMemoryRequirements2 = func.invoke(device, "vkGetImageMemoryRequirements2", "vkGetImageMemoryRequirements2KHR");
        PFN_vkGetBufferMemoryRequirements2 = func.invoke(device, "vkGetBufferMemoryRequirements2", "vkGetBufferMemoryRequirements2KHR");
        PFN_vkGetImageSparseMemoryRequirements2 = func.invoke(device, "vkGetImageSparseMemoryRequirements2", "vkGetImageSparseMemoryRequirements2KHR");
        PFN_vkTrimCommandPool = func.invoke(device, "vkTrimCommandPool", "vkTrimCommandPoolKHR");
        PFN_vkGetDeviceQueue2 = func.invoke(device, "vkGetDeviceQueue2");
        PFN_vkCreateSamplerYcbcrConversion = func.invoke(device, "vkCreateSamplerYcbcrConversion", "vkCreateSamplerYcbcrConversionKHR");
        PFN_vkDestroySamplerYcbcrConversion = func.invoke(device, "vkDestroySamplerYcbcrConversion", "vkDestroySamplerYcbcrConversionKHR");
        PFN_vkCreateDescriptorUpdateTemplate = func.invoke(device, "vkCreateDescriptorUpdateTemplate", "vkCreateDescriptorUpdateTemplateKHR");
        PFN_vkDestroyDescriptorUpdateTemplate = func.invoke(device, "vkDestroyDescriptorUpdateTemplate", "vkDestroyDescriptorUpdateTemplateKHR");
        PFN_vkUpdateDescriptorSetWithTemplate = func.invoke(device, "vkUpdateDescriptorSetWithTemplate", "vkUpdateDescriptorSetWithTemplateKHR");
        PFN_vkGetDescriptorSetLayoutSupport = func.invoke(device, "vkGetDescriptorSetLayoutSupport", "vkGetDescriptorSetLayoutSupportKHR");
        PFN_vkCmdDrawIndirectCount = func.invoke(device, "vkCmdDrawIndirectCount", "vkCmdDrawIndirectCountKHR", "vkCmdDrawIndirectCountAMD");
        PFN_vkCmdDrawIndexedIndirectCount = func.invoke(device, "vkCmdDrawIndexedIndirectCount", "vkCmdDrawIndexedIndirectCountKHR", "vkCmdDrawIndexedIndirectCountAMD");
        PFN_vkCreateRenderPass2 = func.invoke(device, "vkCreateRenderPass2", "vkCreateRenderPass2KHR");
        PFN_vkCmdBeginRenderPass2 = func.invoke(device, "vkCmdBeginRenderPass2", "vkCmdBeginRenderPass2KHR");
        PFN_vkCmdNextSubpass2 = func.invoke(device, "vkCmdNextSubpass2", "vkCmdNextSubpass2KHR");
        PFN_vkCmdEndRenderPass2 = func.invoke(device, "vkCmdEndRenderPass2", "vkCmdEndRenderPass2KHR");
        PFN_vkResetQueryPool = func.invoke(device, "vkResetQueryPool", "vkResetQueryPoolEXT");
        PFN_vkGetSemaphoreCounterValue = func.invoke(device, "vkGetSemaphoreCounterValue", "vkGetSemaphoreCounterValueKHR");
        PFN_vkWaitSemaphores = func.invoke(device, "vkWaitSemaphores", "vkWaitSemaphoresKHR");
        PFN_vkSignalSemaphore = func.invoke(device, "vkSignalSemaphore", "vkSignalSemaphoreKHR");
        PFN_vkGetBufferDeviceAddress = func.invoke(device, "vkGetBufferDeviceAddress", "vkGetBufferDeviceAddressKHR", "vkGetBufferDeviceAddressEXT");
        PFN_vkGetBufferOpaqueCaptureAddress = func.invoke(device, "vkGetBufferOpaqueCaptureAddress", "vkGetBufferOpaqueCaptureAddressKHR");
        PFN_vkGetDeviceMemoryOpaqueCaptureAddress = func.invoke(device, "vkGetDeviceMemoryOpaqueCaptureAddress", "vkGetDeviceMemoryOpaqueCaptureAddressKHR");
        PFN_vkCreatePrivateDataSlot = func.invoke(device, "vkCreatePrivateDataSlot", "vkCreatePrivateDataSlotEXT");
        PFN_vkDestroyPrivateDataSlot = func.invoke(device, "vkDestroyPrivateDataSlot", "vkDestroyPrivateDataSlotEXT");
        PFN_vkSetPrivateData = func.invoke(device, "vkSetPrivateData", "vkSetPrivateDataEXT");
        PFN_vkGetPrivateData = func.invoke(device, "vkGetPrivateData", "vkGetPrivateDataEXT");
        PFN_vkCmdSetEvent2 = func.invoke(device, "vkCmdSetEvent2", "vkCmdSetEvent2KHR");
        PFN_vkCmdResetEvent2 = func.invoke(device, "vkCmdResetEvent2", "vkCmdResetEvent2KHR");
        PFN_vkCmdWaitEvents2 = func.invoke(device, "vkCmdWaitEvents2", "vkCmdWaitEvents2KHR");
        PFN_vkCmdPipelineBarrier2 = func.invoke(device, "vkCmdPipelineBarrier2", "vkCmdPipelineBarrier2KHR");
        PFN_vkCmdWriteTimestamp2 = func.invoke(device, "vkCmdWriteTimestamp2", "vkCmdWriteTimestamp2KHR");
        PFN_vkQueueSubmit2 = func.invoke(device, "vkQueueSubmit2", "vkQueueSubmit2KHR");
        PFN_vkCmdCopyBuffer2 = func.invoke(device, "vkCmdCopyBuffer2", "vkCmdCopyBuffer2KHR");
        PFN_vkCmdCopyImage2 = func.invoke(device, "vkCmdCopyImage2", "vkCmdCopyImage2KHR");
        PFN_vkCmdCopyBufferToImage2 = func.invoke(device, "vkCmdCopyBufferToImage2", "vkCmdCopyBufferToImage2KHR");
        PFN_vkCmdCopyImageToBuffer2 = func.invoke(device, "vkCmdCopyImageToBuffer2", "vkCmdCopyImageToBuffer2KHR");
        PFN_vkCmdBlitImage2 = func.invoke(device, "vkCmdBlitImage2", "vkCmdBlitImage2KHR");
        PFN_vkCmdResolveImage2 = func.invoke(device, "vkCmdResolveImage2", "vkCmdResolveImage2KHR");
        PFN_vkCmdBeginRendering = func.invoke(device, "vkCmdBeginRendering", "vkCmdBeginRenderingKHR");
        PFN_vkCmdEndRendering = func.invoke(device, "vkCmdEndRendering", "vkCmdEndRenderingKHR");
        PFN_vkCmdSetCullMode = func.invoke(device, "vkCmdSetCullMode", "vkCmdSetCullModeEXT");
        PFN_vkCmdSetFrontFace = func.invoke(device, "vkCmdSetFrontFace", "vkCmdSetFrontFaceEXT");
        PFN_vkCmdSetPrimitiveTopology = func.invoke(device, "vkCmdSetPrimitiveTopology", "vkCmdSetPrimitiveTopologyEXT");
        PFN_vkCmdSetViewportWithCount = func.invoke(device, "vkCmdSetViewportWithCount", "vkCmdSetViewportWithCountEXT");
        PFN_vkCmdSetScissorWithCount = func.invoke(device, "vkCmdSetScissorWithCount", "vkCmdSetScissorWithCountEXT");
        PFN_vkCmdBindVertexBuffers2 = func.invoke(device, "vkCmdBindVertexBuffers2", "vkCmdBindVertexBuffers2EXT");
        PFN_vkCmdSetDepthTestEnable = func.invoke(device, "vkCmdSetDepthTestEnable", "vkCmdSetDepthTestEnableEXT");
        PFN_vkCmdSetDepthWriteEnable = func.invoke(device, "vkCmdSetDepthWriteEnable", "vkCmdSetDepthWriteEnableEXT");
        PFN_vkCmdSetDepthCompareOp = func.invoke(device, "vkCmdSetDepthCompareOp", "vkCmdSetDepthCompareOpEXT");
        PFN_vkCmdSetDepthBoundsTestEnable = func.invoke(device, "vkCmdSetDepthBoundsTestEnable", "vkCmdSetDepthBoundsTestEnableEXT");
        PFN_vkCmdSetStencilTestEnable = func.invoke(device, "vkCmdSetStencilTestEnable", "vkCmdSetStencilTestEnableEXT");
        PFN_vkCmdSetStencilOp = func.invoke(device, "vkCmdSetStencilOp", "vkCmdSetStencilOpEXT");
        PFN_vkCmdSetRasterizerDiscardEnable = func.invoke(device, "vkCmdSetRasterizerDiscardEnable", "vkCmdSetRasterizerDiscardEnableEXT");
        PFN_vkCmdSetDepthBiasEnable = func.invoke(device, "vkCmdSetDepthBiasEnable", "vkCmdSetDepthBiasEnableEXT");
        PFN_vkCmdSetPrimitiveRestartEnable = func.invoke(device, "vkCmdSetPrimitiveRestartEnable", "vkCmdSetPrimitiveRestartEnableEXT");
        PFN_vkGetDeviceBufferMemoryRequirements = func.invoke(device, "vkGetDeviceBufferMemoryRequirements", "vkGetDeviceBufferMemoryRequirementsKHR");
        PFN_vkGetDeviceImageMemoryRequirements = func.invoke(device, "vkGetDeviceImageMemoryRequirements", "vkGetDeviceImageMemoryRequirementsKHR");
        PFN_vkGetDeviceImageSparseMemoryRequirements = func.invoke(device, "vkGetDeviceImageSparseMemoryRequirements", "vkGetDeviceImageSparseMemoryRequirementsKHR");
        PFN_vkCmdSetLineStipple = func.invoke(device, "vkCmdSetLineStipple", "vkCmdSetLineStippleKHR", "vkCmdSetLineStippleEXT");
        PFN_vkMapMemory2 = func.invoke(device, "vkMapMemory2", "vkMapMemory2KHR");
        PFN_vkUnmapMemory2 = func.invoke(device, "vkUnmapMemory2", "vkUnmapMemory2KHR");
        PFN_vkCmdBindIndexBuffer2 = func.invoke(device, "vkCmdBindIndexBuffer2", "vkCmdBindIndexBuffer2KHR");
        PFN_vkGetRenderingAreaGranularity = func.invoke(device, "vkGetRenderingAreaGranularity", "vkGetRenderingAreaGranularityKHR");
        PFN_vkGetDeviceImageSubresourceLayout = func.invoke(device, "vkGetDeviceImageSubresourceLayout", "vkGetDeviceImageSubresourceLayoutKHR");
        PFN_vkGetImageSubresourceLayout2 = func.invoke(device, "vkGetImageSubresourceLayout2", "vkGetImageSubresourceLayout2KHR", "vkGetImageSubresourceLayout2EXT");
        PFN_vkCmdPushDescriptorSet = func.invoke(device, "vkCmdPushDescriptorSet", "vkCmdPushDescriptorSetKHR");
        PFN_vkCmdPushDescriptorSetWithTemplate = func.invoke(device, "vkCmdPushDescriptorSetWithTemplate", "vkCmdPushDescriptorSetWithTemplateKHR");
        PFN_vkCmdSetRenderingAttachmentLocations = func.invoke(device, "vkCmdSetRenderingAttachmentLocations", "vkCmdSetRenderingAttachmentLocationsKHR");
        PFN_vkCmdSetRenderingInputAttachmentIndices = func.invoke(device, "vkCmdSetRenderingInputAttachmentIndices", "vkCmdSetRenderingInputAttachmentIndicesKHR");
        PFN_vkCmdBindDescriptorSets2 = func.invoke(device, "vkCmdBindDescriptorSets2", "vkCmdBindDescriptorSets2KHR");
        PFN_vkCmdPushConstants2 = func.invoke(device, "vkCmdPushConstants2", "vkCmdPushConstants2KHR");
        PFN_vkCmdPushDescriptorSet2 = func.invoke(device, "vkCmdPushDescriptorSet2", "vkCmdPushDescriptorSet2KHR");
        PFN_vkCmdPushDescriptorSetWithTemplate2 = func.invoke(device, "vkCmdPushDescriptorSetWithTemplate2", "vkCmdPushDescriptorSetWithTemplate2KHR");
        PFN_vkCopyMemoryToImage = func.invoke(device, "vkCopyMemoryToImage", "vkCopyMemoryToImageEXT");
        PFN_vkCopyImageToMemory = func.invoke(device, "vkCopyImageToMemory", "vkCopyImageToMemoryEXT");
        PFN_vkCopyImageToImage = func.invoke(device, "vkCopyImageToImage", "vkCopyImageToImageEXT");
        PFN_vkTransitionImageLayout = func.invoke(device, "vkTransitionImageLayout", "vkTransitionImageLayoutEXT");
        PFN_vkCreateSwapchainKHR = func.invoke(device, "vkCreateSwapchainKHR");
        PFN_vkDestroySwapchainKHR = func.invoke(device, "vkDestroySwapchainKHR");
        PFN_vkGetSwapchainImagesKHR = func.invoke(device, "vkGetSwapchainImagesKHR");
        PFN_vkAcquireNextImageKHR = func.invoke(device, "vkAcquireNextImageKHR");
        PFN_vkQueuePresentKHR = func.invoke(device, "vkQueuePresentKHR");
        PFN_vkGetDeviceGroupPresentCapabilitiesKHR = func.invoke(device, "vkGetDeviceGroupPresentCapabilitiesKHR");
        PFN_vkGetDeviceGroupSurfacePresentModesKHR = func.invoke(device, "vkGetDeviceGroupSurfacePresentModesKHR");
        PFN_vkAcquireNextImage2KHR = func.invoke(device, "vkAcquireNextImage2KHR");
        PFN_vkCreateSharedSwapchainsKHR = func.invoke(device, "vkCreateSharedSwapchainsKHR");
        PFN_vkDebugMarkerSetObjectTagEXT = func.invoke(device, "vkDebugMarkerSetObjectTagEXT");
        PFN_vkDebugMarkerSetObjectNameEXT = func.invoke(device, "vkDebugMarkerSetObjectNameEXT");
        PFN_vkCmdDebugMarkerBeginEXT = func.invoke(device, "vkCmdDebugMarkerBeginEXT");
        PFN_vkCmdDebugMarkerEndEXT = func.invoke(device, "vkCmdDebugMarkerEndEXT");
        PFN_vkCmdDebugMarkerInsertEXT = func.invoke(device, "vkCmdDebugMarkerInsertEXT");
        PFN_vkCreateVideoSessionKHR = func.invoke(device, "vkCreateVideoSessionKHR");
        PFN_vkDestroyVideoSessionKHR = func.invoke(device, "vkDestroyVideoSessionKHR");
        PFN_vkGetVideoSessionMemoryRequirementsKHR = func.invoke(device, "vkGetVideoSessionMemoryRequirementsKHR");
        PFN_vkBindVideoSessionMemoryKHR = func.invoke(device, "vkBindVideoSessionMemoryKHR");
        PFN_vkCreateVideoSessionParametersKHR = func.invoke(device, "vkCreateVideoSessionParametersKHR");
        PFN_vkUpdateVideoSessionParametersKHR = func.invoke(device, "vkUpdateVideoSessionParametersKHR");
        PFN_vkDestroyVideoSessionParametersKHR = func.invoke(device, "vkDestroyVideoSessionParametersKHR");
        PFN_vkCmdBeginVideoCodingKHR = func.invoke(device, "vkCmdBeginVideoCodingKHR");
        PFN_vkCmdEndVideoCodingKHR = func.invoke(device, "vkCmdEndVideoCodingKHR");
        PFN_vkCmdControlVideoCodingKHR = func.invoke(device, "vkCmdControlVideoCodingKHR");
        PFN_vkCmdDecodeVideoKHR = func.invoke(device, "vkCmdDecodeVideoKHR");
        PFN_vkCmdBindTransformFeedbackBuffersEXT = func.invoke(device, "vkCmdBindTransformFeedbackBuffersEXT");
        PFN_vkCmdBeginTransformFeedbackEXT = func.invoke(device, "vkCmdBeginTransformFeedbackEXT");
        PFN_vkCmdEndTransformFeedbackEXT = func.invoke(device, "vkCmdEndTransformFeedbackEXT");
        PFN_vkCmdBeginQueryIndexedEXT = func.invoke(device, "vkCmdBeginQueryIndexedEXT");
        PFN_vkCmdEndQueryIndexedEXT = func.invoke(device, "vkCmdEndQueryIndexedEXT");
        PFN_vkCmdDrawIndirectByteCountEXT = func.invoke(device, "vkCmdDrawIndirectByteCountEXT");
        PFN_vkCreateCuModuleNVX = func.invoke(device, "vkCreateCuModuleNVX");
        PFN_vkCreateCuFunctionNVX = func.invoke(device, "vkCreateCuFunctionNVX");
        PFN_vkDestroyCuModuleNVX = func.invoke(device, "vkDestroyCuModuleNVX");
        PFN_vkDestroyCuFunctionNVX = func.invoke(device, "vkDestroyCuFunctionNVX");
        PFN_vkCmdCuLaunchKernelNVX = func.invoke(device, "vkCmdCuLaunchKernelNVX");
        PFN_vkGetImageViewHandleNVX = func.invoke(device, "vkGetImageViewHandleNVX");
        PFN_vkGetImageViewHandle64NVX = func.invoke(device, "vkGetImageViewHandle64NVX");
        PFN_vkGetImageViewAddressNVX = func.invoke(device, "vkGetImageViewAddressNVX");
        PFN_vkCmdDrawIndirectCountAMD = func.invoke(device, "vkCmdDrawIndirectCountAMD", "vkCmdDrawIndirectCount");
        PFN_vkCmdDrawIndexedIndirectCountAMD = func.invoke(device, "vkCmdDrawIndexedIndirectCountAMD", "vkCmdDrawIndexedIndirectCount");
        PFN_vkGetShaderInfoAMD = func.invoke(device, "vkGetShaderInfoAMD");
        PFN_vkCmdBeginRenderingKHR = func.invoke(device, "vkCmdBeginRenderingKHR", "vkCmdBeginRendering");
        PFN_vkCmdEndRenderingKHR = func.invoke(device, "vkCmdEndRenderingKHR", "vkCmdEndRendering");
        PFN_vkGetMemoryWin32HandleNV = func.invoke(device, "vkGetMemoryWin32HandleNV");
        PFN_vkGetDeviceGroupPeerMemoryFeaturesKHR = func.invoke(device, "vkGetDeviceGroupPeerMemoryFeaturesKHR", "vkGetDeviceGroupPeerMemoryFeatures");
        PFN_vkCmdSetDeviceMaskKHR = func.invoke(device, "vkCmdSetDeviceMaskKHR", "vkCmdSetDeviceMask");
        PFN_vkCmdDispatchBaseKHR = func.invoke(device, "vkCmdDispatchBaseKHR", "vkCmdDispatchBase");
        PFN_vkTrimCommandPoolKHR = func.invoke(device, "vkTrimCommandPoolKHR", "vkTrimCommandPool");
        PFN_vkGetMemoryWin32HandleKHR = func.invoke(device, "vkGetMemoryWin32HandleKHR");
        PFN_vkGetMemoryWin32HandlePropertiesKHR = func.invoke(device, "vkGetMemoryWin32HandlePropertiesKHR");
        PFN_vkGetMemoryFdKHR = func.invoke(device, "vkGetMemoryFdKHR");
        PFN_vkGetMemoryFdPropertiesKHR = func.invoke(device, "vkGetMemoryFdPropertiesKHR");
        PFN_vkImportSemaphoreWin32HandleKHR = func.invoke(device, "vkImportSemaphoreWin32HandleKHR");
        PFN_vkGetSemaphoreWin32HandleKHR = func.invoke(device, "vkGetSemaphoreWin32HandleKHR");
        PFN_vkImportSemaphoreFdKHR = func.invoke(device, "vkImportSemaphoreFdKHR");
        PFN_vkGetSemaphoreFdKHR = func.invoke(device, "vkGetSemaphoreFdKHR");
        PFN_vkCmdPushDescriptorSetKHR = func.invoke(device, "vkCmdPushDescriptorSetKHR", "vkCmdPushDescriptorSet");
        PFN_vkCmdPushDescriptorSetWithTemplateKHR = func.invoke(device, "vkCmdPushDescriptorSetWithTemplateKHR", "vkCmdPushDescriptorSetWithTemplate");
        PFN_vkCmdBeginConditionalRenderingEXT = func.invoke(device, "vkCmdBeginConditionalRenderingEXT");
        PFN_vkCmdEndConditionalRenderingEXT = func.invoke(device, "vkCmdEndConditionalRenderingEXT");
        PFN_vkCreateDescriptorUpdateTemplateKHR = func.invoke(device, "vkCreateDescriptorUpdateTemplateKHR", "vkCreateDescriptorUpdateTemplate");
        PFN_vkDestroyDescriptorUpdateTemplateKHR = func.invoke(device, "vkDestroyDescriptorUpdateTemplateKHR", "vkDestroyDescriptorUpdateTemplate");
        PFN_vkUpdateDescriptorSetWithTemplateKHR = func.invoke(device, "vkUpdateDescriptorSetWithTemplateKHR", "vkUpdateDescriptorSetWithTemplate");
        PFN_vkCmdSetViewportWScalingNV = func.invoke(device, "vkCmdSetViewportWScalingNV");
        PFN_vkDisplayPowerControlEXT = func.invoke(device, "vkDisplayPowerControlEXT");
        PFN_vkRegisterDeviceEventEXT = func.invoke(device, "vkRegisterDeviceEventEXT");
        PFN_vkRegisterDisplayEventEXT = func.invoke(device, "vkRegisterDisplayEventEXT");
        PFN_vkGetSwapchainCounterEXT = func.invoke(device, "vkGetSwapchainCounterEXT");
        PFN_vkGetRefreshCycleDurationGOOGLE = func.invoke(device, "vkGetRefreshCycleDurationGOOGLE");
        PFN_vkGetPastPresentationTimingGOOGLE = func.invoke(device, "vkGetPastPresentationTimingGOOGLE");
        PFN_vkCmdSetDiscardRectangleEXT = func.invoke(device, "vkCmdSetDiscardRectangleEXT");
        PFN_vkCmdSetDiscardRectangleEnableEXT = func.invoke(device, "vkCmdSetDiscardRectangleEnableEXT");
        PFN_vkCmdSetDiscardRectangleModeEXT = func.invoke(device, "vkCmdSetDiscardRectangleModeEXT");
        PFN_vkSetHdrMetadataEXT = func.invoke(device, "vkSetHdrMetadataEXT");
        PFN_vkCreateRenderPass2KHR = func.invoke(device, "vkCreateRenderPass2KHR", "vkCreateRenderPass2");
        PFN_vkCmdBeginRenderPass2KHR = func.invoke(device, "vkCmdBeginRenderPass2KHR", "vkCmdBeginRenderPass2");
        PFN_vkCmdNextSubpass2KHR = func.invoke(device, "vkCmdNextSubpass2KHR", "vkCmdNextSubpass2");
        PFN_vkCmdEndRenderPass2KHR = func.invoke(device, "vkCmdEndRenderPass2KHR", "vkCmdEndRenderPass2");
        PFN_vkGetSwapchainStatusKHR = func.invoke(device, "vkGetSwapchainStatusKHR");
        PFN_vkImportFenceWin32HandleKHR = func.invoke(device, "vkImportFenceWin32HandleKHR");
        PFN_vkGetFenceWin32HandleKHR = func.invoke(device, "vkGetFenceWin32HandleKHR");
        PFN_vkImportFenceFdKHR = func.invoke(device, "vkImportFenceFdKHR");
        PFN_vkGetFenceFdKHR = func.invoke(device, "vkGetFenceFdKHR");
        PFN_vkAcquireProfilingLockKHR = func.invoke(device, "vkAcquireProfilingLockKHR");
        PFN_vkReleaseProfilingLockKHR = func.invoke(device, "vkReleaseProfilingLockKHR");
        PFN_vkSetDebugUtilsObjectNameEXT = func.invoke(device, "vkSetDebugUtilsObjectNameEXT");
        PFN_vkSetDebugUtilsObjectTagEXT = func.invoke(device, "vkSetDebugUtilsObjectTagEXT");
        PFN_vkQueueBeginDebugUtilsLabelEXT = func.invoke(device, "vkQueueBeginDebugUtilsLabelEXT");
        PFN_vkQueueEndDebugUtilsLabelEXT = func.invoke(device, "vkQueueEndDebugUtilsLabelEXT");
        PFN_vkQueueInsertDebugUtilsLabelEXT = func.invoke(device, "vkQueueInsertDebugUtilsLabelEXT");
        PFN_vkCmdBeginDebugUtilsLabelEXT = func.invoke(device, "vkCmdBeginDebugUtilsLabelEXT");
        PFN_vkCmdEndDebugUtilsLabelEXT = func.invoke(device, "vkCmdEndDebugUtilsLabelEXT");
        PFN_vkCmdInsertDebugUtilsLabelEXT = func.invoke(device, "vkCmdInsertDebugUtilsLabelEXT");
        PFN_vkGetAndroidHardwareBufferPropertiesANDROID = func.invoke(device, "vkGetAndroidHardwareBufferPropertiesANDROID");
        PFN_vkGetMemoryAndroidHardwareBufferANDROID = func.invoke(device, "vkGetMemoryAndroidHardwareBufferANDROID");
        PFN_vkCreateExecutionGraphPipelinesAMDX = func.invoke(device, "vkCreateExecutionGraphPipelinesAMDX");
        PFN_vkGetExecutionGraphPipelineScratchSizeAMDX = func.invoke(device, "vkGetExecutionGraphPipelineScratchSizeAMDX");
        PFN_vkGetExecutionGraphPipelineNodeIndexAMDX = func.invoke(device, "vkGetExecutionGraphPipelineNodeIndexAMDX");
        PFN_vkCmdInitializeGraphScratchMemoryAMDX = func.invoke(device, "vkCmdInitializeGraphScratchMemoryAMDX");
        PFN_vkCmdDispatchGraphAMDX = func.invoke(device, "vkCmdDispatchGraphAMDX");
        PFN_vkCmdDispatchGraphIndirectAMDX = func.invoke(device, "vkCmdDispatchGraphIndirectAMDX");
        PFN_vkCmdDispatchGraphIndirectCountAMDX = func.invoke(device, "vkCmdDispatchGraphIndirectCountAMDX");
        PFN_vkCmdSetSampleLocationsEXT = func.invoke(device, "vkCmdSetSampleLocationsEXT");
        PFN_vkGetImageMemoryRequirements2KHR = func.invoke(device, "vkGetImageMemoryRequirements2KHR", "vkGetImageMemoryRequirements2");
        PFN_vkGetBufferMemoryRequirements2KHR = func.invoke(device, "vkGetBufferMemoryRequirements2KHR", "vkGetBufferMemoryRequirements2");
        PFN_vkGetImageSparseMemoryRequirements2KHR = func.invoke(device, "vkGetImageSparseMemoryRequirements2KHR", "vkGetImageSparseMemoryRequirements2");
        PFN_vkCreateAccelerationStructureKHR = func.invoke(device, "vkCreateAccelerationStructureKHR");
        PFN_vkDestroyAccelerationStructureKHR = func.invoke(device, "vkDestroyAccelerationStructureKHR");
        PFN_vkCmdBuildAccelerationStructuresKHR = func.invoke(device, "vkCmdBuildAccelerationStructuresKHR");
        PFN_vkCmdBuildAccelerationStructuresIndirectKHR = func.invoke(device, "vkCmdBuildAccelerationStructuresIndirectKHR");
        PFN_vkBuildAccelerationStructuresKHR = func.invoke(device, "vkBuildAccelerationStructuresKHR");
        PFN_vkCopyAccelerationStructureKHR = func.invoke(device, "vkCopyAccelerationStructureKHR");
        PFN_vkCopyAccelerationStructureToMemoryKHR = func.invoke(device, "vkCopyAccelerationStructureToMemoryKHR");
        PFN_vkCopyMemoryToAccelerationStructureKHR = func.invoke(device, "vkCopyMemoryToAccelerationStructureKHR");
        PFN_vkWriteAccelerationStructuresPropertiesKHR = func.invoke(device, "vkWriteAccelerationStructuresPropertiesKHR");
        PFN_vkCmdCopyAccelerationStructureKHR = func.invoke(device, "vkCmdCopyAccelerationStructureKHR");
        PFN_vkCmdCopyAccelerationStructureToMemoryKHR = func.invoke(device, "vkCmdCopyAccelerationStructureToMemoryKHR");
        PFN_vkCmdCopyMemoryToAccelerationStructureKHR = func.invoke(device, "vkCmdCopyMemoryToAccelerationStructureKHR");
        PFN_vkGetAccelerationStructureDeviceAddressKHR = func.invoke(device, "vkGetAccelerationStructureDeviceAddressKHR");
        PFN_vkCmdWriteAccelerationStructuresPropertiesKHR = func.invoke(device, "vkCmdWriteAccelerationStructuresPropertiesKHR");
        PFN_vkGetDeviceAccelerationStructureCompatibilityKHR = func.invoke(device, "vkGetDeviceAccelerationStructureCompatibilityKHR");
        PFN_vkGetAccelerationStructureBuildSizesKHR = func.invoke(device, "vkGetAccelerationStructureBuildSizesKHR");
        PFN_vkCmdTraceRaysKHR = func.invoke(device, "vkCmdTraceRaysKHR");
        PFN_vkCreateRayTracingPipelinesKHR = func.invoke(device, "vkCreateRayTracingPipelinesKHR");
        PFN_vkGetRayTracingShaderGroupHandlesKHR = func.invoke(device, "vkGetRayTracingShaderGroupHandlesKHR", "vkGetRayTracingShaderGroupHandlesNV");
        PFN_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR = func.invoke(device, "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR");
        PFN_vkCmdTraceRaysIndirectKHR = func.invoke(device, "vkCmdTraceRaysIndirectKHR");
        PFN_vkGetRayTracingShaderGroupStackSizeKHR = func.invoke(device, "vkGetRayTracingShaderGroupStackSizeKHR");
        PFN_vkCmdSetRayTracingPipelineStackSizeKHR = func.invoke(device, "vkCmdSetRayTracingPipelineStackSizeKHR");
        PFN_vkCreateSamplerYcbcrConversionKHR = func.invoke(device, "vkCreateSamplerYcbcrConversionKHR", "vkCreateSamplerYcbcrConversion");
        PFN_vkDestroySamplerYcbcrConversionKHR = func.invoke(device, "vkDestroySamplerYcbcrConversionKHR", "vkDestroySamplerYcbcrConversion");
        PFN_vkBindBufferMemory2KHR = func.invoke(device, "vkBindBufferMemory2KHR", "vkBindBufferMemory2");
        PFN_vkBindImageMemory2KHR = func.invoke(device, "vkBindImageMemory2KHR", "vkBindImageMemory2");
        PFN_vkGetImageDrmFormatModifierPropertiesEXT = func.invoke(device, "vkGetImageDrmFormatModifierPropertiesEXT");
        PFN_vkCreateValidationCacheEXT = func.invoke(device, "vkCreateValidationCacheEXT");
        PFN_vkDestroyValidationCacheEXT = func.invoke(device, "vkDestroyValidationCacheEXT");
        PFN_vkMergeValidationCachesEXT = func.invoke(device, "vkMergeValidationCachesEXT");
        PFN_vkGetValidationCacheDataEXT = func.invoke(device, "vkGetValidationCacheDataEXT");
        PFN_vkCmdBindShadingRateImageNV = func.invoke(device, "vkCmdBindShadingRateImageNV");
        PFN_vkCmdSetViewportShadingRatePaletteNV = func.invoke(device, "vkCmdSetViewportShadingRatePaletteNV");
        PFN_vkCmdSetCoarseSampleOrderNV = func.invoke(device, "vkCmdSetCoarseSampleOrderNV");
        PFN_vkCreateAccelerationStructureNV = func.invoke(device, "vkCreateAccelerationStructureNV");
        PFN_vkDestroyAccelerationStructureNV = func.invoke(device, "vkDestroyAccelerationStructureNV");
        PFN_vkGetAccelerationStructureMemoryRequirementsNV = func.invoke(device, "vkGetAccelerationStructureMemoryRequirementsNV");
        PFN_vkBindAccelerationStructureMemoryNV = func.invoke(device, "vkBindAccelerationStructureMemoryNV");
        PFN_vkCmdBuildAccelerationStructureNV = func.invoke(device, "vkCmdBuildAccelerationStructureNV");
        PFN_vkCmdCopyAccelerationStructureNV = func.invoke(device, "vkCmdCopyAccelerationStructureNV");
        PFN_vkCmdTraceRaysNV = func.invoke(device, "vkCmdTraceRaysNV");
        PFN_vkCreateRayTracingPipelinesNV = func.invoke(device, "vkCreateRayTracingPipelinesNV");
        PFN_vkGetRayTracingShaderGroupHandlesNV = func.invoke(device, "vkGetRayTracingShaderGroupHandlesNV", "vkGetRayTracingShaderGroupHandlesKHR");
        PFN_vkGetAccelerationStructureHandleNV = func.invoke(device, "vkGetAccelerationStructureHandleNV");
        PFN_vkCmdWriteAccelerationStructuresPropertiesNV = func.invoke(device, "vkCmdWriteAccelerationStructuresPropertiesNV");
        PFN_vkCompileDeferredNV = func.invoke(device, "vkCompileDeferredNV");
        PFN_vkGetDescriptorSetLayoutSupportKHR = func.invoke(device, "vkGetDescriptorSetLayoutSupportKHR", "vkGetDescriptorSetLayoutSupport");
        PFN_vkCmdDrawIndirectCountKHR = func.invoke(device, "vkCmdDrawIndirectCountKHR", "vkCmdDrawIndirectCount");
        PFN_vkCmdDrawIndexedIndirectCountKHR = func.invoke(device, "vkCmdDrawIndexedIndirectCountKHR", "vkCmdDrawIndexedIndirectCount");
        PFN_vkGetMemoryHostPointerPropertiesEXT = func.invoke(device, "vkGetMemoryHostPointerPropertiesEXT");
        PFN_vkCmdWriteBufferMarkerAMD = func.invoke(device, "vkCmdWriteBufferMarkerAMD");
        PFN_vkCmdWriteBufferMarker2AMD = func.invoke(device, "vkCmdWriteBufferMarker2AMD");
        PFN_vkGetCalibratedTimestampsEXT = func.invoke(device, "vkGetCalibratedTimestampsEXT", "vkGetCalibratedTimestampsKHR");
        PFN_vkCmdDrawMeshTasksNV = func.invoke(device, "vkCmdDrawMeshTasksNV");
        PFN_vkCmdDrawMeshTasksIndirectNV = func.invoke(device, "vkCmdDrawMeshTasksIndirectNV");
        PFN_vkCmdDrawMeshTasksIndirectCountNV = func.invoke(device, "vkCmdDrawMeshTasksIndirectCountNV");
        PFN_vkCmdSetExclusiveScissorEnableNV = func.invoke(device, "vkCmdSetExclusiveScissorEnableNV");
        PFN_vkCmdSetExclusiveScissorNV = func.invoke(device, "vkCmdSetExclusiveScissorNV");
        PFN_vkCmdSetCheckpointNV = func.invoke(device, "vkCmdSetCheckpointNV");
        PFN_vkGetQueueCheckpointDataNV = func.invoke(device, "vkGetQueueCheckpointDataNV");
        PFN_vkGetQueueCheckpointData2NV = func.invoke(device, "vkGetQueueCheckpointData2NV");
        PFN_vkGetSemaphoreCounterValueKHR = func.invoke(device, "vkGetSemaphoreCounterValueKHR", "vkGetSemaphoreCounterValue");
        PFN_vkWaitSemaphoresKHR = func.invoke(device, "vkWaitSemaphoresKHR", "vkWaitSemaphores");
        PFN_vkSignalSemaphoreKHR = func.invoke(device, "vkSignalSemaphoreKHR", "vkSignalSemaphore");
        PFN_vkInitializePerformanceApiINTEL = func.invoke(device, "vkInitializePerformanceApiINTEL");
        PFN_vkUninitializePerformanceApiINTEL = func.invoke(device, "vkUninitializePerformanceApiINTEL");
        PFN_vkCmdSetPerformanceMarkerINTEL = func.invoke(device, "vkCmdSetPerformanceMarkerINTEL");
        PFN_vkCmdSetPerformanceStreamMarkerINTEL = func.invoke(device, "vkCmdSetPerformanceStreamMarkerINTEL");
        PFN_vkCmdSetPerformanceOverrideINTEL = func.invoke(device, "vkCmdSetPerformanceOverrideINTEL");
        PFN_vkAcquirePerformanceConfigurationINTEL = func.invoke(device, "vkAcquirePerformanceConfigurationINTEL");
        PFN_vkReleasePerformanceConfigurationINTEL = func.invoke(device, "vkReleasePerformanceConfigurationINTEL");
        PFN_vkQueueSetPerformanceConfigurationINTEL = func.invoke(device, "vkQueueSetPerformanceConfigurationINTEL");
        PFN_vkGetPerformanceParameterINTEL = func.invoke(device, "vkGetPerformanceParameterINTEL");
        PFN_vkSetLocalDimmingAMD = func.invoke(device, "vkSetLocalDimmingAMD");
        PFN_vkCmdSetFragmentShadingRateKHR = func.invoke(device, "vkCmdSetFragmentShadingRateKHR");
        PFN_vkCmdSetRenderingAttachmentLocationsKHR = func.invoke(device, "vkCmdSetRenderingAttachmentLocationsKHR", "vkCmdSetRenderingAttachmentLocations");
        PFN_vkCmdSetRenderingInputAttachmentIndicesKHR = func.invoke(device, "vkCmdSetRenderingInputAttachmentIndicesKHR", "vkCmdSetRenderingInputAttachmentIndices");
        PFN_vkGetBufferDeviceAddressEXT = func.invoke(device, "vkGetBufferDeviceAddressEXT", "vkGetBufferDeviceAddress");
        PFN_vkWaitForPresentKHR = func.invoke(device, "vkWaitForPresentKHR");
        PFN_vkAcquireFullScreenExclusiveModeEXT = func.invoke(device, "vkAcquireFullScreenExclusiveModeEXT");
        PFN_vkReleaseFullScreenExclusiveModeEXT = func.invoke(device, "vkReleaseFullScreenExclusiveModeEXT");
        PFN_vkGetDeviceGroupSurfacePresentModes2EXT = func.invoke(device, "vkGetDeviceGroupSurfacePresentModes2EXT");
        PFN_vkGetBufferDeviceAddressKHR = func.invoke(device, "vkGetBufferDeviceAddressKHR", "vkGetBufferDeviceAddress");
        PFN_vkGetBufferOpaqueCaptureAddressKHR = func.invoke(device, "vkGetBufferOpaqueCaptureAddressKHR", "vkGetBufferOpaqueCaptureAddress");
        PFN_vkGetDeviceMemoryOpaqueCaptureAddressKHR = func.invoke(device, "vkGetDeviceMemoryOpaqueCaptureAddressKHR", "vkGetDeviceMemoryOpaqueCaptureAddress");
        PFN_vkCmdSetLineStippleEXT = func.invoke(device, "vkCmdSetLineStippleEXT", "vkCmdSetLineStipple");
        PFN_vkResetQueryPoolEXT = func.invoke(device, "vkResetQueryPoolEXT", "vkResetQueryPool");
        PFN_vkCmdSetCullModeEXT = func.invoke(device, "vkCmdSetCullModeEXT", "vkCmdSetCullMode");
        PFN_vkCmdSetFrontFaceEXT = func.invoke(device, "vkCmdSetFrontFaceEXT", "vkCmdSetFrontFace");
        PFN_vkCmdSetPrimitiveTopologyEXT = func.invoke(device, "vkCmdSetPrimitiveTopologyEXT", "vkCmdSetPrimitiveTopology");
        PFN_vkCmdSetViewportWithCountEXT = func.invoke(device, "vkCmdSetViewportWithCountEXT", "vkCmdSetViewportWithCount");
        PFN_vkCmdSetScissorWithCountEXT = func.invoke(device, "vkCmdSetScissorWithCountEXT", "vkCmdSetScissorWithCount");
        PFN_vkCmdBindVertexBuffers2EXT = func.invoke(device, "vkCmdBindVertexBuffers2EXT", "vkCmdBindVertexBuffers2");
        PFN_vkCmdSetDepthTestEnableEXT = func.invoke(device, "vkCmdSetDepthTestEnableEXT", "vkCmdSetDepthTestEnable");
        PFN_vkCmdSetDepthWriteEnableEXT = func.invoke(device, "vkCmdSetDepthWriteEnableEXT", "vkCmdSetDepthWriteEnable");
        PFN_vkCmdSetDepthCompareOpEXT = func.invoke(device, "vkCmdSetDepthCompareOpEXT", "vkCmdSetDepthCompareOp");
        PFN_vkCmdSetDepthBoundsTestEnableEXT = func.invoke(device, "vkCmdSetDepthBoundsTestEnableEXT", "vkCmdSetDepthBoundsTestEnable");
        PFN_vkCmdSetStencilTestEnableEXT = func.invoke(device, "vkCmdSetStencilTestEnableEXT", "vkCmdSetStencilTestEnable");
        PFN_vkCmdSetStencilOpEXT = func.invoke(device, "vkCmdSetStencilOpEXT", "vkCmdSetStencilOp");
        PFN_vkCreateDeferredOperationKHR = func.invoke(device, "vkCreateDeferredOperationKHR");
        PFN_vkDestroyDeferredOperationKHR = func.invoke(device, "vkDestroyDeferredOperationKHR");
        PFN_vkGetDeferredOperationMaxConcurrencyKHR = func.invoke(device, "vkGetDeferredOperationMaxConcurrencyKHR");
        PFN_vkGetDeferredOperationResultKHR = func.invoke(device, "vkGetDeferredOperationResultKHR");
        PFN_vkDeferredOperationJoinKHR = func.invoke(device, "vkDeferredOperationJoinKHR");
        PFN_vkGetPipelineExecutablePropertiesKHR = func.invoke(device, "vkGetPipelineExecutablePropertiesKHR");
        PFN_vkGetPipelineExecutableStatisticsKHR = func.invoke(device, "vkGetPipelineExecutableStatisticsKHR");
        PFN_vkGetPipelineExecutableInternalRepresentationsKHR = func.invoke(device, "vkGetPipelineExecutableInternalRepresentationsKHR");
        PFN_vkCopyMemoryToImageEXT = func.invoke(device, "vkCopyMemoryToImageEXT", "vkCopyMemoryToImage");
        PFN_vkCopyImageToMemoryEXT = func.invoke(device, "vkCopyImageToMemoryEXT", "vkCopyImageToMemory");
        PFN_vkCopyImageToImageEXT = func.invoke(device, "vkCopyImageToImageEXT", "vkCopyImageToImage");
        PFN_vkTransitionImageLayoutEXT = func.invoke(device, "vkTransitionImageLayoutEXT", "vkTransitionImageLayout");
        PFN_vkGetImageSubresourceLayout2EXT = func.invoke(device, "vkGetImageSubresourceLayout2EXT", "vkGetImageSubresourceLayout2");
        PFN_vkMapMemory2KHR = func.invoke(device, "vkMapMemory2KHR", "vkMapMemory2");
        PFN_vkUnmapMemory2KHR = func.invoke(device, "vkUnmapMemory2KHR", "vkUnmapMemory2");
        PFN_vkReleaseSwapchainImagesEXT = func.invoke(device, "vkReleaseSwapchainImagesEXT");
        PFN_vkGetGeneratedCommandsMemoryRequirementsNV = func.invoke(device, "vkGetGeneratedCommandsMemoryRequirementsNV");
        PFN_vkCmdPreprocessGeneratedCommandsNV = func.invoke(device, "vkCmdPreprocessGeneratedCommandsNV");
        PFN_vkCmdExecuteGeneratedCommandsNV = func.invoke(device, "vkCmdExecuteGeneratedCommandsNV");
        PFN_vkCmdBindPipelineShaderGroupNV = func.invoke(device, "vkCmdBindPipelineShaderGroupNV");
        PFN_vkCreateIndirectCommandsLayoutNV = func.invoke(device, "vkCreateIndirectCommandsLayoutNV");
        PFN_vkDestroyIndirectCommandsLayoutNV = func.invoke(device, "vkDestroyIndirectCommandsLayoutNV");
        PFN_vkCmdSetDepthBias2EXT = func.invoke(device, "vkCmdSetDepthBias2EXT");
        PFN_vkCreatePrivateDataSlotEXT = func.invoke(device, "vkCreatePrivateDataSlotEXT", "vkCreatePrivateDataSlot");
        PFN_vkDestroyPrivateDataSlotEXT = func.invoke(device, "vkDestroyPrivateDataSlotEXT", "vkDestroyPrivateDataSlot");
        PFN_vkSetPrivateDataEXT = func.invoke(device, "vkSetPrivateDataEXT", "vkSetPrivateData");
        PFN_vkGetPrivateDataEXT = func.invoke(device, "vkGetPrivateDataEXT", "vkGetPrivateData");
        PFN_vkGetEncodedVideoSessionParametersKHR = func.invoke(device, "vkGetEncodedVideoSessionParametersKHR");
        PFN_vkCmdEncodeVideoKHR = func.invoke(device, "vkCmdEncodeVideoKHR");
        PFN_vkCreateCudaModuleNV = func.invoke(device, "vkCreateCudaModuleNV");
        PFN_vkGetCudaModuleCacheNV = func.invoke(device, "vkGetCudaModuleCacheNV");
        PFN_vkCreateCudaFunctionNV = func.invoke(device, "vkCreateCudaFunctionNV");
        PFN_vkDestroyCudaModuleNV = func.invoke(device, "vkDestroyCudaModuleNV");
        PFN_vkDestroyCudaFunctionNV = func.invoke(device, "vkDestroyCudaFunctionNV");
        PFN_vkCmdCudaLaunchKernelNV = func.invoke(device, "vkCmdCudaLaunchKernelNV");
        PFN_vkCmdDispatchTileQCOM = func.invoke(device, "vkCmdDispatchTileQCOM");
        PFN_vkCmdBeginPerTileExecutionQCOM = func.invoke(device, "vkCmdBeginPerTileExecutionQCOM");
        PFN_vkCmdEndPerTileExecutionQCOM = func.invoke(device, "vkCmdEndPerTileExecutionQCOM");
        PFN_vkExportMetalObjectsEXT = func.invoke(device, "vkExportMetalObjectsEXT");
        PFN_vkCmdSetEvent2KHR = func.invoke(device, "vkCmdSetEvent2KHR", "vkCmdSetEvent2");
        PFN_vkCmdResetEvent2KHR = func.invoke(device, "vkCmdResetEvent2KHR", "vkCmdResetEvent2");
        PFN_vkCmdWaitEvents2KHR = func.invoke(device, "vkCmdWaitEvents2KHR", "vkCmdWaitEvents2");
        PFN_vkCmdPipelineBarrier2KHR = func.invoke(device, "vkCmdPipelineBarrier2KHR", "vkCmdPipelineBarrier2");
        PFN_vkCmdWriteTimestamp2KHR = func.invoke(device, "vkCmdWriteTimestamp2KHR", "vkCmdWriteTimestamp2");
        PFN_vkQueueSubmit2KHR = func.invoke(device, "vkQueueSubmit2KHR", "vkQueueSubmit2");
        PFN_vkGetDescriptorSetLayoutSizeEXT = func.invoke(device, "vkGetDescriptorSetLayoutSizeEXT");
        PFN_vkGetDescriptorSetLayoutBindingOffsetEXT = func.invoke(device, "vkGetDescriptorSetLayoutBindingOffsetEXT");
        PFN_vkGetDescriptorEXT = func.invoke(device, "vkGetDescriptorEXT");
        PFN_vkCmdBindDescriptorBuffersEXT = func.invoke(device, "vkCmdBindDescriptorBuffersEXT");
        PFN_vkCmdSetDescriptorBufferOffsetsEXT = func.invoke(device, "vkCmdSetDescriptorBufferOffsetsEXT");
        PFN_vkCmdBindDescriptorBufferEmbeddedSamplersEXT = func.invoke(device, "vkCmdBindDescriptorBufferEmbeddedSamplersEXT");
        PFN_vkGetBufferOpaqueCaptureDescriptorDataEXT = func.invoke(device, "vkGetBufferOpaqueCaptureDescriptorDataEXT");
        PFN_vkGetImageOpaqueCaptureDescriptorDataEXT = func.invoke(device, "vkGetImageOpaqueCaptureDescriptorDataEXT");
        PFN_vkGetImageViewOpaqueCaptureDescriptorDataEXT = func.invoke(device, "vkGetImageViewOpaqueCaptureDescriptorDataEXT");
        PFN_vkGetSamplerOpaqueCaptureDescriptorDataEXT = func.invoke(device, "vkGetSamplerOpaqueCaptureDescriptorDataEXT");
        PFN_vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT = func.invoke(device, "vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT");
        PFN_vkCmdSetFragmentShadingRateEnumNV = func.invoke(device, "vkCmdSetFragmentShadingRateEnumNV");
        PFN_vkCmdDrawMeshTasksEXT = func.invoke(device, "vkCmdDrawMeshTasksEXT");
        PFN_vkCmdDrawMeshTasksIndirectEXT = func.invoke(device, "vkCmdDrawMeshTasksIndirectEXT");
        PFN_vkCmdDrawMeshTasksIndirectCountEXT = func.invoke(device, "vkCmdDrawMeshTasksIndirectCountEXT");
        PFN_vkCmdCopyBuffer2KHR = func.invoke(device, "vkCmdCopyBuffer2KHR", "vkCmdCopyBuffer2");
        PFN_vkCmdCopyImage2KHR = func.invoke(device, "vkCmdCopyImage2KHR", "vkCmdCopyImage2");
        PFN_vkCmdCopyBufferToImage2KHR = func.invoke(device, "vkCmdCopyBufferToImage2KHR", "vkCmdCopyBufferToImage2");
        PFN_vkCmdCopyImageToBuffer2KHR = func.invoke(device, "vkCmdCopyImageToBuffer2KHR", "vkCmdCopyImageToBuffer2");
        PFN_vkCmdBlitImage2KHR = func.invoke(device, "vkCmdBlitImage2KHR", "vkCmdBlitImage2");
        PFN_vkCmdResolveImage2KHR = func.invoke(device, "vkCmdResolveImage2KHR", "vkCmdResolveImage2");
        PFN_vkGetDeviceFaultInfoEXT = func.invoke(device, "vkGetDeviceFaultInfoEXT");
        PFN_vkCmdSetVertexInputEXT = func.invoke(device, "vkCmdSetVertexInputEXT");
        PFN_vkGetMemoryZirconHandleFUCHSIA = func.invoke(device, "vkGetMemoryZirconHandleFUCHSIA");
        PFN_vkGetMemoryZirconHandlePropertiesFUCHSIA = func.invoke(device, "vkGetMemoryZirconHandlePropertiesFUCHSIA");
        PFN_vkImportSemaphoreZirconHandleFUCHSIA = func.invoke(device, "vkImportSemaphoreZirconHandleFUCHSIA");
        PFN_vkGetSemaphoreZirconHandleFUCHSIA = func.invoke(device, "vkGetSemaphoreZirconHandleFUCHSIA");
        PFN_vkCreateBufferCollectionFUCHSIA = func.invoke(device, "vkCreateBufferCollectionFUCHSIA");
        PFN_vkSetBufferCollectionImageConstraintsFUCHSIA = func.invoke(device, "vkSetBufferCollectionImageConstraintsFUCHSIA");
        PFN_vkSetBufferCollectionBufferConstraintsFUCHSIA = func.invoke(device, "vkSetBufferCollectionBufferConstraintsFUCHSIA");
        PFN_vkDestroyBufferCollectionFUCHSIA = func.invoke(device, "vkDestroyBufferCollectionFUCHSIA");
        PFN_vkGetBufferCollectionPropertiesFUCHSIA = func.invoke(device, "vkGetBufferCollectionPropertiesFUCHSIA");
        PFN_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = func.invoke(device, "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI");
        PFN_vkCmdSubpassShadingHUAWEI = func.invoke(device, "vkCmdSubpassShadingHUAWEI");
        PFN_vkCmdBindInvocationMaskHUAWEI = func.invoke(device, "vkCmdBindInvocationMaskHUAWEI");
        PFN_vkGetMemoryRemoteAddressNV = func.invoke(device, "vkGetMemoryRemoteAddressNV");
        PFN_vkGetPipelinePropertiesEXT = func.invoke(device, "vkGetPipelinePropertiesEXT");
        PFN_vkCmdSetPatchControlPointsEXT = func.invoke(device, "vkCmdSetPatchControlPointsEXT");
        PFN_vkCmdSetRasterizerDiscardEnableEXT = func.invoke(device, "vkCmdSetRasterizerDiscardEnableEXT", "vkCmdSetRasterizerDiscardEnable");
        PFN_vkCmdSetDepthBiasEnableEXT = func.invoke(device, "vkCmdSetDepthBiasEnableEXT", "vkCmdSetDepthBiasEnable");
        PFN_vkCmdSetLogicOpEXT = func.invoke(device, "vkCmdSetLogicOpEXT");
        PFN_vkCmdSetPrimitiveRestartEnableEXT = func.invoke(device, "vkCmdSetPrimitiveRestartEnableEXT", "vkCmdSetPrimitiveRestartEnable");
        PFN_vkCmdSetColorWriteEnableEXT = func.invoke(device, "vkCmdSetColorWriteEnableEXT");
        PFN_vkCmdTraceRaysIndirect2KHR = func.invoke(device, "vkCmdTraceRaysIndirect2KHR");
        PFN_vkCmdDrawMultiEXT = func.invoke(device, "vkCmdDrawMultiEXT");
        PFN_vkCmdDrawMultiIndexedEXT = func.invoke(device, "vkCmdDrawMultiIndexedEXT");
        PFN_vkCreateMicromapEXT = func.invoke(device, "vkCreateMicromapEXT");
        PFN_vkDestroyMicromapEXT = func.invoke(device, "vkDestroyMicromapEXT");
        PFN_vkCmdBuildMicromapsEXT = func.invoke(device, "vkCmdBuildMicromapsEXT");
        PFN_vkBuildMicromapsEXT = func.invoke(device, "vkBuildMicromapsEXT");
        PFN_vkCopyMicromapEXT = func.invoke(device, "vkCopyMicromapEXT");
        PFN_vkCopyMicromapToMemoryEXT = func.invoke(device, "vkCopyMicromapToMemoryEXT");
        PFN_vkCopyMemoryToMicromapEXT = func.invoke(device, "vkCopyMemoryToMicromapEXT");
        PFN_vkWriteMicromapsPropertiesEXT = func.invoke(device, "vkWriteMicromapsPropertiesEXT");
        PFN_vkCmdCopyMicromapEXT = func.invoke(device, "vkCmdCopyMicromapEXT");
        PFN_vkCmdCopyMicromapToMemoryEXT = func.invoke(device, "vkCmdCopyMicromapToMemoryEXT");
        PFN_vkCmdCopyMemoryToMicromapEXT = func.invoke(device, "vkCmdCopyMemoryToMicromapEXT");
        PFN_vkCmdWriteMicromapsPropertiesEXT = func.invoke(device, "vkCmdWriteMicromapsPropertiesEXT");
        PFN_vkGetDeviceMicromapCompatibilityEXT = func.invoke(device, "vkGetDeviceMicromapCompatibilityEXT");
        PFN_vkGetMicromapBuildSizesEXT = func.invoke(device, "vkGetMicromapBuildSizesEXT");
        PFN_vkCmdDrawClusterHUAWEI = func.invoke(device, "vkCmdDrawClusterHUAWEI");
        PFN_vkCmdDrawClusterIndirectHUAWEI = func.invoke(device, "vkCmdDrawClusterIndirectHUAWEI");
        PFN_vkSetDeviceMemoryPriorityEXT = func.invoke(device, "vkSetDeviceMemoryPriorityEXT");
        PFN_vkGetDeviceBufferMemoryRequirementsKHR = func.invoke(device, "vkGetDeviceBufferMemoryRequirementsKHR", "vkGetDeviceBufferMemoryRequirements");
        PFN_vkGetDeviceImageMemoryRequirementsKHR = func.invoke(device, "vkGetDeviceImageMemoryRequirementsKHR", "vkGetDeviceImageMemoryRequirements");
        PFN_vkGetDeviceImageSparseMemoryRequirementsKHR = func.invoke(device, "vkGetDeviceImageSparseMemoryRequirementsKHR", "vkGetDeviceImageSparseMemoryRequirements");
        PFN_vkGetDescriptorSetLayoutHostMappingInfoVALVE = func.invoke(device, "vkGetDescriptorSetLayoutHostMappingInfoVALVE");
        PFN_vkGetDescriptorSetHostMappingVALVE = func.invoke(device, "vkGetDescriptorSetHostMappingVALVE");
        PFN_vkCmdCopyMemoryIndirectNV = func.invoke(device, "vkCmdCopyMemoryIndirectNV");
        PFN_vkCmdCopyMemoryToImageIndirectNV = func.invoke(device, "vkCmdCopyMemoryToImageIndirectNV");
        PFN_vkCmdDecompressMemoryNV = func.invoke(device, "vkCmdDecompressMemoryNV");
        PFN_vkCmdDecompressMemoryIndirectCountNV = func.invoke(device, "vkCmdDecompressMemoryIndirectCountNV");
        PFN_vkGetPipelineIndirectMemoryRequirementsNV = func.invoke(device, "vkGetPipelineIndirectMemoryRequirementsNV");
        PFN_vkCmdUpdatePipelineIndirectBufferNV = func.invoke(device, "vkCmdUpdatePipelineIndirectBufferNV");
        PFN_vkGetPipelineIndirectDeviceAddressNV = func.invoke(device, "vkGetPipelineIndirectDeviceAddressNV");
        PFN_vkCmdSetDepthClampEnableEXT = func.invoke(device, "vkCmdSetDepthClampEnableEXT");
        PFN_vkCmdSetPolygonModeEXT = func.invoke(device, "vkCmdSetPolygonModeEXT");
        PFN_vkCmdSetRasterizationSamplesEXT = func.invoke(device, "vkCmdSetRasterizationSamplesEXT");
        PFN_vkCmdSetSampleMaskEXT = func.invoke(device, "vkCmdSetSampleMaskEXT");
        PFN_vkCmdSetAlphaToCoverageEnableEXT = func.invoke(device, "vkCmdSetAlphaToCoverageEnableEXT");
        PFN_vkCmdSetAlphaToOneEnableEXT = func.invoke(device, "vkCmdSetAlphaToOneEnableEXT");
        PFN_vkCmdSetLogicOpEnableEXT = func.invoke(device, "vkCmdSetLogicOpEnableEXT");
        PFN_vkCmdSetColorBlendEnableEXT = func.invoke(device, "vkCmdSetColorBlendEnableEXT");
        PFN_vkCmdSetColorBlendEquationEXT = func.invoke(device, "vkCmdSetColorBlendEquationEXT");
        PFN_vkCmdSetColorWriteMaskEXT = func.invoke(device, "vkCmdSetColorWriteMaskEXT");
        PFN_vkCmdSetTessellationDomainOriginEXT = func.invoke(device, "vkCmdSetTessellationDomainOriginEXT");
        PFN_vkCmdSetRasterizationStreamEXT = func.invoke(device, "vkCmdSetRasterizationStreamEXT");
        PFN_vkCmdSetConservativeRasterizationModeEXT = func.invoke(device, "vkCmdSetConservativeRasterizationModeEXT");
        PFN_vkCmdSetExtraPrimitiveOverestimationSizeEXT = func.invoke(device, "vkCmdSetExtraPrimitiveOverestimationSizeEXT");
        PFN_vkCmdSetDepthClipEnableEXT = func.invoke(device, "vkCmdSetDepthClipEnableEXT");
        PFN_vkCmdSetSampleLocationsEnableEXT = func.invoke(device, "vkCmdSetSampleLocationsEnableEXT");
        PFN_vkCmdSetColorBlendAdvancedEXT = func.invoke(device, "vkCmdSetColorBlendAdvancedEXT");
        PFN_vkCmdSetProvokingVertexModeEXT = func.invoke(device, "vkCmdSetProvokingVertexModeEXT");
        PFN_vkCmdSetLineRasterizationModeEXT = func.invoke(device, "vkCmdSetLineRasterizationModeEXT");
        PFN_vkCmdSetLineStippleEnableEXT = func.invoke(device, "vkCmdSetLineStippleEnableEXT");
        PFN_vkCmdSetDepthClipNegativeOneToOneEXT = func.invoke(device, "vkCmdSetDepthClipNegativeOneToOneEXT");
        PFN_vkCmdSetViewportWScalingEnableNV = func.invoke(device, "vkCmdSetViewportWScalingEnableNV");
        PFN_vkCmdSetViewportSwizzleNV = func.invoke(device, "vkCmdSetViewportSwizzleNV");
        PFN_vkCmdSetCoverageToColorEnableNV = func.invoke(device, "vkCmdSetCoverageToColorEnableNV");
        PFN_vkCmdSetCoverageToColorLocationNV = func.invoke(device, "vkCmdSetCoverageToColorLocationNV");
        PFN_vkCmdSetCoverageModulationModeNV = func.invoke(device, "vkCmdSetCoverageModulationModeNV");
        PFN_vkCmdSetCoverageModulationTableEnableNV = func.invoke(device, "vkCmdSetCoverageModulationTableEnableNV");
        PFN_vkCmdSetCoverageModulationTableNV = func.invoke(device, "vkCmdSetCoverageModulationTableNV");
        PFN_vkCmdSetShadingRateImageEnableNV = func.invoke(device, "vkCmdSetShadingRateImageEnableNV");
        PFN_vkCmdSetRepresentativeFragmentTestEnableNV = func.invoke(device, "vkCmdSetRepresentativeFragmentTestEnableNV");
        PFN_vkCmdSetCoverageReductionModeNV = func.invoke(device, "vkCmdSetCoverageReductionModeNV");
        PFN_vkCreateTensorARM = func.invoke(device, "vkCreateTensorARM");
        PFN_vkDestroyTensorARM = func.invoke(device, "vkDestroyTensorARM");
        PFN_vkCreateTensorViewARM = func.invoke(device, "vkCreateTensorViewARM");
        PFN_vkDestroyTensorViewARM = func.invoke(device, "vkDestroyTensorViewARM");
        PFN_vkGetTensorMemoryRequirementsARM = func.invoke(device, "vkGetTensorMemoryRequirementsARM");
        PFN_vkBindTensorMemoryARM = func.invoke(device, "vkBindTensorMemoryARM");
        PFN_vkGetDeviceTensorMemoryRequirementsARM = func.invoke(device, "vkGetDeviceTensorMemoryRequirementsARM");
        PFN_vkCmdCopyTensorARM = func.invoke(device, "vkCmdCopyTensorARM");
        PFN_vkGetTensorOpaqueCaptureDescriptorDataARM = func.invoke(device, "vkGetTensorOpaqueCaptureDescriptorDataARM");
        PFN_vkGetTensorViewOpaqueCaptureDescriptorDataARM = func.invoke(device, "vkGetTensorViewOpaqueCaptureDescriptorDataARM");
        PFN_vkGetShaderModuleIdentifierEXT = func.invoke(device, "vkGetShaderModuleIdentifierEXT");
        PFN_vkGetShaderModuleCreateInfoIdentifierEXT = func.invoke(device, "vkGetShaderModuleCreateInfoIdentifierEXT");
        PFN_vkCreateOpticalFlowSessionNV = func.invoke(device, "vkCreateOpticalFlowSessionNV");
        PFN_vkDestroyOpticalFlowSessionNV = func.invoke(device, "vkDestroyOpticalFlowSessionNV");
        PFN_vkBindOpticalFlowSessionImageNV = func.invoke(device, "vkBindOpticalFlowSessionImageNV");
        PFN_vkCmdOpticalFlowExecuteNV = func.invoke(device, "vkCmdOpticalFlowExecuteNV");
        PFN_vkCmdBindIndexBuffer2KHR = func.invoke(device, "vkCmdBindIndexBuffer2KHR", "vkCmdBindIndexBuffer2");
        PFN_vkGetRenderingAreaGranularityKHR = func.invoke(device, "vkGetRenderingAreaGranularityKHR", "vkGetRenderingAreaGranularity");
        PFN_vkGetDeviceImageSubresourceLayoutKHR = func.invoke(device, "vkGetDeviceImageSubresourceLayoutKHR", "vkGetDeviceImageSubresourceLayout");
        PFN_vkGetImageSubresourceLayout2KHR = func.invoke(device, "vkGetImageSubresourceLayout2KHR", "vkGetImageSubresourceLayout2");
        PFN_vkAntiLagUpdateAMD = func.invoke(device, "vkAntiLagUpdateAMD");
        PFN_vkWaitForPresent2KHR = func.invoke(device, "vkWaitForPresent2KHR");
        PFN_vkCreateShadersEXT = func.invoke(device, "vkCreateShadersEXT");
        PFN_vkDestroyShaderEXT = func.invoke(device, "vkDestroyShaderEXT");
        PFN_vkGetShaderBinaryDataEXT = func.invoke(device, "vkGetShaderBinaryDataEXT");
        PFN_vkCmdBindShadersEXT = func.invoke(device, "vkCmdBindShadersEXT");
        PFN_vkCmdSetDepthClampRangeEXT = func.invoke(device, "vkCmdSetDepthClampRangeEXT");
        PFN_vkCreatePipelineBinariesKHR = func.invoke(device, "vkCreatePipelineBinariesKHR");
        PFN_vkDestroyPipelineBinaryKHR = func.invoke(device, "vkDestroyPipelineBinaryKHR");
        PFN_vkGetPipelineKeyKHR = func.invoke(device, "vkGetPipelineKeyKHR");
        PFN_vkGetPipelineBinaryDataKHR = func.invoke(device, "vkGetPipelineBinaryDataKHR");
        PFN_vkReleaseCapturedPipelineDataKHR = func.invoke(device, "vkReleaseCapturedPipelineDataKHR");
        PFN_vkGetFramebufferTilePropertiesQCOM = func.invoke(device, "vkGetFramebufferTilePropertiesQCOM");
        PFN_vkGetDynamicRenderingTilePropertiesQCOM = func.invoke(device, "vkGetDynamicRenderingTilePropertiesQCOM");
        PFN_vkConvertCooperativeVectorMatrixNV = func.invoke(device, "vkConvertCooperativeVectorMatrixNV");
        PFN_vkCmdConvertCooperativeVectorMatrixNV = func.invoke(device, "vkCmdConvertCooperativeVectorMatrixNV");
        PFN_vkSetLatencySleepModeNV = func.invoke(device, "vkSetLatencySleepModeNV");
        PFN_vkLatencySleepNV = func.invoke(device, "vkLatencySleepNV");
        PFN_vkSetLatencyMarkerNV = func.invoke(device, "vkSetLatencyMarkerNV");
        PFN_vkGetLatencyTimingsNV = func.invoke(device, "vkGetLatencyTimingsNV");
        PFN_vkQueueNotifyOutOfBandNV = func.invoke(device, "vkQueueNotifyOutOfBandNV");
        PFN_vkCreateDataGraphPipelinesARM = func.invoke(device, "vkCreateDataGraphPipelinesARM");
        PFN_vkCreateDataGraphPipelineSessionARM = func.invoke(device, "vkCreateDataGraphPipelineSessionARM");
        PFN_vkGetDataGraphPipelineSessionBindPointRequirementsARM = func.invoke(device, "vkGetDataGraphPipelineSessionBindPointRequirementsARM");
        PFN_vkGetDataGraphPipelineSessionMemoryRequirementsARM = func.invoke(device, "vkGetDataGraphPipelineSessionMemoryRequirementsARM");
        PFN_vkBindDataGraphPipelineSessionMemoryARM = func.invoke(device, "vkBindDataGraphPipelineSessionMemoryARM");
        PFN_vkDestroyDataGraphPipelineSessionARM = func.invoke(device, "vkDestroyDataGraphPipelineSessionARM");
        PFN_vkCmdDispatchDataGraphARM = func.invoke(device, "vkCmdDispatchDataGraphARM");
        PFN_vkGetDataGraphPipelineAvailablePropertiesARM = func.invoke(device, "vkGetDataGraphPipelineAvailablePropertiesARM");
        PFN_vkGetDataGraphPipelinePropertiesARM = func.invoke(device, "vkGetDataGraphPipelinePropertiesARM");
        PFN_vkCmdSetAttachmentFeedbackLoopEnableEXT = func.invoke(device, "vkCmdSetAttachmentFeedbackLoopEnableEXT");
        PFN_vkGetScreenBufferPropertiesQNX = func.invoke(device, "vkGetScreenBufferPropertiesQNX");
        PFN_vkCmdSetLineStippleKHR = func.invoke(device, "vkCmdSetLineStippleKHR", "vkCmdSetLineStipple");
        PFN_vkGetCalibratedTimestampsKHR = func.invoke(device, "vkGetCalibratedTimestampsKHR", "vkGetCalibratedTimestampsEXT");
        PFN_vkCmdBindDescriptorSets2KHR = func.invoke(device, "vkCmdBindDescriptorSets2KHR", "vkCmdBindDescriptorSets2");
        PFN_vkCmdPushConstants2KHR = func.invoke(device, "vkCmdPushConstants2KHR", "vkCmdPushConstants2");
        PFN_vkCmdPushDescriptorSet2KHR = func.invoke(device, "vkCmdPushDescriptorSet2KHR", "vkCmdPushDescriptorSet2");
        PFN_vkCmdPushDescriptorSetWithTemplate2KHR = func.invoke(device, "vkCmdPushDescriptorSetWithTemplate2KHR", "vkCmdPushDescriptorSetWithTemplate2");
        PFN_vkCmdSetDescriptorBufferOffsets2EXT = func.invoke(device, "vkCmdSetDescriptorBufferOffsets2EXT");
        PFN_vkCmdBindDescriptorBufferEmbeddedSamplers2EXT = func.invoke(device, "vkCmdBindDescriptorBufferEmbeddedSamplers2EXT");
        PFN_vkCmdBindTileMemoryQCOM = func.invoke(device, "vkCmdBindTileMemoryQCOM");
        PFN_vkCreateExternalComputeQueueNV = func.invoke(device, "vkCreateExternalComputeQueueNV");
        PFN_vkDestroyExternalComputeQueueNV = func.invoke(device, "vkDestroyExternalComputeQueueNV");
        PFN_vkGetExternalComputeQueueDataNV = func.invoke(device, "vkGetExternalComputeQueueDataNV");
        PFN_vkGetClusterAccelerationStructureBuildSizesNV = func.invoke(device, "vkGetClusterAccelerationStructureBuildSizesNV");
        PFN_vkCmdBuildClusterAccelerationStructureIndirectNV = func.invoke(device, "vkCmdBuildClusterAccelerationStructureIndirectNV");
        PFN_vkGetPartitionedAccelerationStructuresBuildSizesNV = func.invoke(device, "vkGetPartitionedAccelerationStructuresBuildSizesNV");
        PFN_vkCmdBuildPartitionedAccelerationStructuresNV = func.invoke(device, "vkCmdBuildPartitionedAccelerationStructuresNV");
        PFN_vkGetGeneratedCommandsMemoryRequirementsEXT = func.invoke(device, "vkGetGeneratedCommandsMemoryRequirementsEXT");
        PFN_vkCmdPreprocessGeneratedCommandsEXT = func.invoke(device, "vkCmdPreprocessGeneratedCommandsEXT");
        PFN_vkCmdExecuteGeneratedCommandsEXT = func.invoke(device, "vkCmdExecuteGeneratedCommandsEXT");
        PFN_vkCreateIndirectCommandsLayoutEXT = func.invoke(device, "vkCreateIndirectCommandsLayoutEXT");
        PFN_vkDestroyIndirectCommandsLayoutEXT = func.invoke(device, "vkDestroyIndirectCommandsLayoutEXT");
        PFN_vkCreateIndirectExecutionSetEXT = func.invoke(device, "vkCreateIndirectExecutionSetEXT");
        PFN_vkDestroyIndirectExecutionSetEXT = func.invoke(device, "vkDestroyIndirectExecutionSetEXT");
        PFN_vkUpdateIndirectExecutionSetPipelineEXT = func.invoke(device, "vkUpdateIndirectExecutionSetPipelineEXT");
        PFN_vkUpdateIndirectExecutionSetShaderEXT = func.invoke(device, "vkUpdateIndirectExecutionSetShaderEXT");
        PFN_vkGetMemoryMetalHandleEXT = func.invoke(device, "vkGetMemoryMetalHandleEXT");
        PFN_vkGetMemoryMetalHandlePropertiesEXT = func.invoke(device, "vkGetMemoryMetalHandlePropertiesEXT");
        PFN_vkCmdEndRendering2EXT = func.invoke(device, "vkCmdEndRendering2EXT");
    }
}
