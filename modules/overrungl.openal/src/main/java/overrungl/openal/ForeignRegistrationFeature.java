/*
 * MIT License
 *
 * Copyright (c) 2022-2025 Overrun Organization
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 */

// This file is auto-generated. DO NOT EDIT!
package overrungl.openal;
import org.graalvm.nativeimage.hosted.Feature;
import static org.graalvm.nativeimage.hosted.RuntimeForeignAccess.*;
class ForeignRegistrationFeature implements Feature {
    @Override public void duringSetup(DuringSetupAccess access) {
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alEnable);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alDisable);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alIsEnabled);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alDopplerFactor);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alDopplerVelocity);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSpeedOfSound);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alDistanceModel);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetString);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetBooleanv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetIntegerv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetFloatv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetDoublev);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetBoolean);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetInteger);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetFloat);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetDouble);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetError);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alIsExtensionPresent);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetProcAddress);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetEnumValue);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alListenerf);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alListener3f);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alListenerfv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alListeneri);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alListener3i);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alListeneriv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetListenerf);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetListener3f);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetListenerfv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetListeneri);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetListener3i);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetListeneriv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGenSources);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alDeleteSources);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alIsSource);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSourcef);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSource3f);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSourcefv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSourcei);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSource3i);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSourceiv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetSourcef);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetSource3f);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetSourcefv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetSourcei);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetSource3i);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetSourceiv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSourcePlay);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSourceStop);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSourceRewind);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSourcePause);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSourcePlayv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSourceStopv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSourceRewindv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSourcePausev);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSourceQueueBuffers);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alSourceUnqueueBuffers);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGenBuffers);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alDeleteBuffers);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alIsBuffer);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alBufferData);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alBufferf);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alBuffer3f);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alBufferfv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alBufferi);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alBuffer3i);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alBufferiv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetBufferf);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetBuffer3f);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetBufferfv);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetBufferi);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetBuffer3i);
        registerForDowncall(overrungl.openal.AL.Descriptors.FD_alGetBufferiv);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcCreateContext);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcMakeContextCurrent);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcProcessContext);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcSuspendContext);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcDestroyContext);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcGetCurrentContext);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcGetContextsDevice);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcOpenDevice);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcCloseDevice);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcGetError);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcIsExtensionPresent);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcGetProcAddress);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcGetEnumValue);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcGetString);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcGetIntegerv);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcCaptureOpenDevice);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcCaptureCloseDevice);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcCaptureStart);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcCaptureStop);
        registerForDowncall(overrungl.openal.ALC.Descriptors.FD_alcCaptureSamples);
        registerForDowncall(overrungl.openal.ALEXTSTATICBUFFER.Descriptors.FD_alBufferDataStatic);
        registerForDowncall(overrungl.openal.ALCEXTThreadLocalContext.Descriptors.FD_alcSetThreadContext);
        registerForDowncall(overrungl.openal.ALCEXTThreadLocalContext.Descriptors.FD_alcGetThreadContext);
        registerForDowncall(overrungl.openal.ALSOFTBufferSubData.Descriptors.FD_alBufferSubDataSOFT);
        registerForDowncall(overrungl.openal.ALEXTFOLDBACK.Descriptors.FD_alRequestFoldbackStart);
        registerForDowncall(overrungl.openal.ALEXTFOLDBACK.Descriptors.FD_alRequestFoldbackStop);
        registerForDowncall(overrungl.openal.ALSOFTBufferSamples.Descriptors.FD_alBufferSamplesSOFT);
        registerForDowncall(overrungl.openal.ALSOFTBufferSamples.Descriptors.FD_alBufferSubSamplesSOFT);
        registerForDowncall(overrungl.openal.ALSOFTBufferSamples.Descriptors.FD_alGetBufferSamplesSOFT);
        registerForDowncall(overrungl.openal.ALSOFTBufferSamples.Descriptors.FD_alIsBufferFormatSupportedSOFT);
        registerForDowncall(overrungl.openal.ALCSOFTLoopback.Descriptors.FD_alcLoopbackOpenDeviceSOFT);
        registerForDowncall(overrungl.openal.ALCSOFTLoopback.Descriptors.FD_alcIsRenderFormatSupportedSOFT);
        registerForDowncall(overrungl.openal.ALCSOFTLoopback.Descriptors.FD_alcRenderSamplesSOFT);
        registerForDowncall(overrungl.openal.ALSOFTSourceLatency.Descriptors.FD_alSourcedSOFT);
        registerForDowncall(overrungl.openal.ALSOFTSourceLatency.Descriptors.FD_alSource3dSOFT);
        registerForDowncall(overrungl.openal.ALSOFTSourceLatency.Descriptors.FD_alSourcedvSOFT);
        registerForDowncall(overrungl.openal.ALSOFTSourceLatency.Descriptors.FD_alGetSourcedSOFT);
        registerForDowncall(overrungl.openal.ALSOFTSourceLatency.Descriptors.FD_alGetSource3dSOFT);
        registerForDowncall(overrungl.openal.ALSOFTSourceLatency.Descriptors.FD_alGetSourcedvSOFT);
        registerForDowncall(overrungl.openal.ALSOFTSourceLatency.Descriptors.FD_alSourcei64SOFT);
        registerForDowncall(overrungl.openal.ALSOFTSourceLatency.Descriptors.FD_alSource3i64SOFT);
        registerForDowncall(overrungl.openal.ALSOFTSourceLatency.Descriptors.FD_alSourcei64vSOFT);
        registerForDowncall(overrungl.openal.ALSOFTSourceLatency.Descriptors.FD_alGetSourcei64SOFT);
        registerForDowncall(overrungl.openal.ALSOFTSourceLatency.Descriptors.FD_alGetSource3i64SOFT);
        registerForDowncall(overrungl.openal.ALSOFTSourceLatency.Descriptors.FD_alGetSourcei64vSOFT);
        registerForDowncall(overrungl.openal.ALSOFTDeferredUpdates.Descriptors.FD_alDeferUpdatesSOFT);
        registerForDowncall(overrungl.openal.ALSOFTDeferredUpdates.Descriptors.FD_alProcessUpdatesSOFT);
        registerForDowncall(overrungl.openal.ALCSOFTPauseDevice.Descriptors.FD_alcDevicePauseSOFT);
        registerForDowncall(overrungl.openal.ALCSOFTPauseDevice.Descriptors.FD_alcDeviceResumeSOFT);
        registerForDowncall(overrungl.openal.ALCSOFTHRTF.Descriptors.FD_alcGetStringiSOFT);
        registerForDowncall(overrungl.openal.ALCSOFTHRTF.Descriptors.FD_alcResetDeviceSOFT);
        registerForDowncall(overrungl.openal.ALSOFTSourceResampler.Descriptors.FD_alGetStringiSOFT);
        registerForDowncall(overrungl.openal.ALCSOFTDeviceClock.Descriptors.FD_alcGetInteger64vSOFT);
        registerForDowncall(overrungl.openal.ALSOFTEvents.Descriptors.FD_alEventControlSOFT);
        registerForDowncall(overrungl.openal.ALSOFTEvents.Descriptors.FD_alEventCallbackSOFT);
        registerForDowncall(overrungl.openal.ALSOFTEvents.Descriptors.FD_alGetPointerSOFT);
        registerForDowncall(overrungl.openal.ALSOFTEvents.Descriptors.FD_alGetPointervSOFT);
        registerForDowncall(overrungl.openal.ALCSOFTReopenDevice.Descriptors.FD_alcReopenDeviceSOFT);
        registerForDowncall(overrungl.openal.ALSOFTCallbackBuffer.Descriptors.FD_alBufferCallbackSOFT);
        registerForDowncall(overrungl.openal.ALSOFTCallbackBuffer.Descriptors.FD_alGetBufferPtrSOFT);
        registerForDowncall(overrungl.openal.ALSOFTCallbackBuffer.Descriptors.FD_alGetBuffer3PtrSOFT);
        registerForDowncall(overrungl.openal.ALSOFTCallbackBuffer.Descriptors.FD_alGetBufferPtrvSOFT);
        registerForDowncall(overrungl.openal.ALSOFTSourceStartDelay.Descriptors.FD_alSourcePlayAtTimeSOFT);
        registerForDowncall(overrungl.openal.ALSOFTSourceStartDelay.Descriptors.FD_alSourcePlayAtTimevSOFT);
        registerForDowncall(overrungl.openal.ALEXTDebug.Descriptors.FD_alDebugMessageCallbackEXT);
        registerForDowncall(overrungl.openal.ALEXTDebug.Descriptors.FD_alDebugMessageInsertEXT);
        registerForDowncall(overrungl.openal.ALEXTDebug.Descriptors.FD_alDebugMessageControlEXT);
        registerForDowncall(overrungl.openal.ALEXTDebug.Descriptors.FD_alPushDebugGroupEXT);
        registerForDowncall(overrungl.openal.ALEXTDebug.Descriptors.FD_alPopDebugGroupEXT);
        registerForDowncall(overrungl.openal.ALEXTDebug.Descriptors.FD_alGetDebugMessageLogEXT);
        registerForDowncall(overrungl.openal.ALEXTDebug.Descriptors.FD_alObjectLabelEXT);
        registerForDowncall(overrungl.openal.ALEXTDebug.Descriptors.FD_alGetObjectLabelEXT);
        registerForDowncall(overrungl.openal.ALEXTDebug.Descriptors.FD_alGetPointerEXT);
        registerForDowncall(overrungl.openal.ALEXTDebug.Descriptors.FD_alGetPointervEXT);
        registerForDowncall(overrungl.openal.ALCSOFTSystemEvents.Descriptors.FD_alcEventIsSupportedSOFT);
        registerForDowncall(overrungl.openal.ALCSOFTSystemEvents.Descriptors.FD_alcEventControlSOFT);
        registerForDowncall(overrungl.openal.ALCSOFTSystemEvents.Descriptors.FD_alcEventCallbackSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alcGetProcAddress2);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alEnableDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alDisableDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alIsEnabledDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alDopplerFactorDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSpeedOfSoundDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alDistanceModelDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetStringDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetBooleanvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetIntegervDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetFloatvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetDoublevDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetBooleanDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetIntegerDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetFloatDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetDoubleDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetErrorDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alIsExtensionPresentDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetProcAddressDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetEnumValueDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alListenerfDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alListener3fDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alListenerfvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alListeneriDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alListener3iDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alListenerivDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetListenerfDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetListener3fDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetListenerfvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetListeneriDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetListener3iDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetListenerivDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGenSourcesDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alDeleteSourcesDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alIsSourceDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourcefDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSource3fDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourcefvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourceiDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSource3iDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourceivDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetSourcefDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetSource3fDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetSourcefvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetSourceiDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetSource3iDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetSourceivDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourcePlayDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourceStopDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourceRewindDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourcePauseDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourcePlayvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourceStopvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourceRewindvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourcePausevDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourceQueueBuffersDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourceUnqueueBuffersDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGenBuffersDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alDeleteBuffersDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alIsBufferDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alBufferDataDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alBufferfDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alBuffer3fDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alBufferfvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alBufferiDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alBuffer3iDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alBufferivDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetBufferfDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetBuffer3fDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetBufferfvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetBufferiDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetBuffer3iDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetBufferivDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGenEffectsDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alDeleteEffectsDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alIsEffectDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alEffectiDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alEffectivDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alEffectfDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alEffectfvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetEffectiDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetEffectivDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetEffectfDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetEffectfvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGenFiltersDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alDeleteFiltersDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alIsFilterDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alFilteriDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alFilterivDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alFilterfDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alFilterfvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetFilteriDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetFilterivDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetFilterfDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetFilterfvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGenAuxiliaryEffectSlotsDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alDeleteAuxiliaryEffectSlotsDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alIsAuxiliaryEffectSlotDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alAuxiliaryEffectSlotiDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alAuxiliaryEffectSlotivDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alAuxiliaryEffectSlotfDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alAuxiliaryEffectSlotfvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetAuxiliaryEffectSlotiDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetAuxiliaryEffectSlotivDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetAuxiliaryEffectSlotfDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetAuxiliaryEffectSlotfvDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alBufferDataStaticDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alDebugMessageCallbackDirectEXT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alDebugMessageInsertDirectEXT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alDebugMessageControlDirectEXT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alPushDebugGroupDirectEXT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alPopDebugGroupDirectEXT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetDebugMessageLogDirectEXT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alObjectLabelDirectEXT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetObjectLabelDirectEXT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetPointerDirectEXT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetPointervDirectEXT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alRequestFoldbackStartDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alRequestFoldbackStopDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alBufferSubDataDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourcedDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSource3dDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourcedvDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetSourcedDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetSource3dDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetSourcedvDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourcei64DirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSource3i64DirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourcei64vDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetSourcei64DirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetSource3i64DirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetSourcei64vDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alDeferUpdatesDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alProcessUpdatesDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetStringiDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alEventControlDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alEventCallbackDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetPointerDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetPointervDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alBufferCallbackDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetBufferPtrDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetBuffer3PtrDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alGetBufferPtrvDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourcePlayAtTimeDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_alSourcePlayAtTimevDirectSOFT);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_EAXSetDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_EAXGetDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_EAXSetBufferModeDirect);
        registerForDowncall(overrungl.openal.ALEXTDirectContext.Descriptors.FD_EAXGetBufferModeDirect);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alGenEffects);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alDeleteEffects);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alIsEffect);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alEffecti);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alEffectiv);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alEffectf);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alEffectfv);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alGetEffecti);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alGetEffectiv);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alGetEffectf);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alGetEffectfv);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alGenFilters);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alDeleteFilters);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alIsFilter);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alFilteri);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alFilteriv);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alFilterf);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alFilterfv);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alGetFilteri);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alGetFilteriv);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alGetFilterf);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alGetFilterfv);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alGenAuxiliaryEffectSlots);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alDeleteAuxiliaryEffectSlots);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alIsAuxiliaryEffectSlot);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alAuxiliaryEffectSloti);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alAuxiliaryEffectSlotiv);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alAuxiliaryEffectSlotf);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alAuxiliaryEffectSlotfv);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alGetAuxiliaryEffectSloti);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alGetAuxiliaryEffectSlotiv);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alGetAuxiliaryEffectSlotf);
        registerForDowncall(overrungl.openal.ALCEXTEFX.Descriptors.FD_alGetAuxiliaryEffectSlotfv);
        registerForUpcall(overrungl.openal.ALFoldbackCallback.DESCRIPTOR);
        registerForUpcall(overrungl.openal.ALEventProcSOFT.DESCRIPTOR);
        registerForUpcall(overrungl.openal.ALBufferCallbackTypeSOFT.DESCRIPTOR);
        registerForUpcall(overrungl.openal.ALDebugProcEXT.DESCRIPTOR);
        registerForUpcall(overrungl.openal.ALCEventProcTypeSOFT.DESCRIPTOR);
    }
}
