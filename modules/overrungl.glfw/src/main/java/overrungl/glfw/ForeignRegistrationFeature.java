/*
 * MIT License
 *
 * Copyright (c) 2022-2025 Overrun Organization
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 */

// This file is auto-generated. DO NOT EDIT!
package overrungl.glfw;
import org.graalvm.nativeimage.hosted.Feature;
import static org.graalvm.nativeimage.hosted.RuntimeForeignAccess.*;
class ForeignRegistrationFeature implements Feature {
    @Override public void duringSetup(DuringSetupAccess access) {
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwInit);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwTerminate);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwInitHint);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwInitAllocator);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwInitVulkanLoader);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetVersion);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetVersionString);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetError);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetErrorCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetPlatform);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwPlatformSupported);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetMonitors);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetPrimaryMonitor);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetMonitorPos);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetMonitorWorkarea);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetMonitorPhysicalSize);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetMonitorContentScale);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetMonitorName);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetMonitorUserPointer);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetMonitorUserPointer);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetMonitorCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetVideoModes);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetVideoMode);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetGamma);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetGammaRamp);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetGammaRamp);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwDefaultWindowHints);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwWindowHint);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwWindowHintString);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwCreateWindow);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwDestroyWindow);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwWindowShouldClose);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowShouldClose);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetWindowTitle);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowTitle);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowIcon);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetWindowPos);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowPos);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetWindowSize);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowSizeLimits);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowAspectRatio);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowSize);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetFramebufferSize);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetWindowFrameSize);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetWindowContentScale);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetWindowOpacity);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowOpacity);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwIconifyWindow);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwRestoreWindow);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwMaximizeWindow);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwShowWindow);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwHideWindow);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwFocusWindow);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwRequestWindowAttention);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetWindowMonitor);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowMonitor);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetWindowAttrib);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowAttrib);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowUserPointer);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetWindowUserPointer);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowPosCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowSizeCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowCloseCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowRefreshCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowFocusCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowIconifyCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowMaximizeCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetFramebufferSizeCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetWindowContentScaleCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwPollEvents);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwWaitEvents);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwWaitEventsTimeout);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwPostEmptyEvent);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetInputMode);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetInputMode);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwRawMouseMotionSupported);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetKeyName);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetKeyScancode);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetKey);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetMouseButton);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetCursorPos);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetCursorPos);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwCreateCursor);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwCreateStandardCursor);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwDestroyCursor);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetCursor);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetKeyCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetCharCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetMouseButtonCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetCursorPosCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetCursorEnterCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetScrollCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetDropCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwJoystickPresent);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetJoystickAxes);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetJoystickButtons);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetJoystickHats);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetJoystickName);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetJoystickGUID);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetJoystickUserPointer);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetJoystickUserPointer);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwJoystickIsGamepad);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetJoystickCallback);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwUpdateGamepadMappings);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetGamepadName);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetGamepadState);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetClipboardString);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetClipboardString);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetTime);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSetTime);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetTimerValue);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetTimerFrequency);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwMakeContextCurrent);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetCurrentContext);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSwapBuffers);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwSwapInterval);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwExtensionSupported);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetProcAddress);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwVulkanSupported);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetRequiredInstanceExtensions);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetInstanceProcAddress);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwGetPhysicalDevicePresentationSupport);
        registerForDowncall(overrungl.glfw.GLFW.Descriptors.FD_glfwCreateWindowSurface);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetWin32Adapter);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetWin32Monitor);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetWin32Window);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetWGLContext);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetCocoaMonitor);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetCocoaWindow);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetCocoaView);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetNSGLContext);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetX11Display);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetX11Adapter);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetX11Monitor);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetX11Window);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwSetX11SelectionString);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetX11SelectionString);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetGLXContext);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetGLXWindow);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetWaylandDisplay);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetWaylandMonitor);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetWaylandWindow);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetEGLDisplay);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetEGLContext);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetEGLSurface);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetOSMesaColorBuffer);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetOSMesaDepthBuffer);
        registerForDowncall(overrungl.glfw.GLFWNative.Descriptors.FD_glfwGetOSMesaContext);
        registerForUpcall(overrungl.glfw.GLFWAllocateFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWReallocateFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWDeallocateFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWErrorFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWWindowPosFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWWindowSizeFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWWindowCloseFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWWindowRefreshFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWWindowFocusFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWWindowIconifyFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWWindowMaximizeFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWFramebufferSizeFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWWindowContentScaleFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWMouseButtonFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWCursorPosFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWCursorEnterFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWScrollFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWKeyFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWCharFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWDropFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWMonitorFun.DESCRIPTOR);
        registerForUpcall(overrungl.glfw.GLFWJoystickFun.DESCRIPTOR);
    }
}
